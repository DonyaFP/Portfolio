<?xml version="1.0"?>
<doc>
    <assembly>
        <name>FluentSpotifyApi</name>
    </assembly>
    <members>
        <member name="T:FluentSpotifyApi.Builder.Albums.IAlbumBuilder">
            <summary>
            The builder for "albums/{id}" endpoint.
            </summary>
        </member>
        <member name="P:FluentSpotifyApi.Builder.Albums.IAlbumBuilder.Tracks">
            <summary>
            Gets builder for "albums/{id}/tracks" endpoint.
            </summary>
        </member>
        <member name="M:FluentSpotifyApi.Builder.Albums.IAlbumBuilder.GetAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Gets Spotify catalog information for a single album.
            </summary>
            <param name="market">The market you’d like to request. Synonym for <c>country</c>.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns></returns>
        </member>
        <member name="T:FluentSpotifyApi.Builder.Albums.IAlbumsBuilder">
            <summary>
            The builder for "albums?ids={ids}" endpoint.
            </summary>
        </member>
        <member name="M:FluentSpotifyApi.Builder.Albums.IAlbumsBuilder.GetAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Gets Spotify catalog information for multiple albums identified by their Spotify IDs.
            </summary>
            <param name="market">An ISO 3166-1 alpha-2 country code or the string <c>from_token</c>. Provide this parameter if you want to apply Track Relinking.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns></returns>
        </member>
        <member name="T:FluentSpotifyApi.Builder.Albums.IAlbumTracksBuilder">
            <summary>
            The builder for "albums/{id}/tracks" endpoint.
            </summary>
        </member>
        <member name="M:FluentSpotifyApi.Builder.Albums.IAlbumTracksBuilder.GetAsync(System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Gets Spotify catalog information about an album’s tracks. Optional parameters can be used to limit the number of tracks returned.
            </summary>
            <param name="market">An ISO 3166-1 alpha-2 country code or the string <c>from_token</c>. Provide this parameter if you want to apply Track Relinking.</param>
            <param name="limit">The maximum number of tracks to return. Default: 20. Minimum: 1. Maximum: 50.</param>
            <param name="offset">The index of the first track to return. Default: 0 (the first object). Use with <paramref name="limit"/> to get the next set of tracks.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns></returns>
        </member>
        <member name="T:FluentSpotifyApi.Builder.Artists.AlbumType">
            <summary>
            The album type.
            </summary>
        </member>
        <member name="F:FluentSpotifyApi.Builder.Artists.AlbumType.Album">
            <summary>
            The album
            </summary>
        </member>
        <member name="F:FluentSpotifyApi.Builder.Artists.AlbumType.Single">
            <summary>
            The single
            </summary>
        </member>
        <member name="F:FluentSpotifyApi.Builder.Artists.AlbumType.AppearsOn">
            <summary>
            The appears on
            </summary>
        </member>
        <member name="F:FluentSpotifyApi.Builder.Artists.AlbumType.Compilation">
            <summary>
            The compilation
            </summary>
        </member>
        <member name="T:FluentSpotifyApi.Builder.Artists.IArtistAlbumsBuilder">
            <summary>
            The builder for "artists/{id}/albums" endpoint.
            </summary>
        </member>
        <member name="M:FluentSpotifyApi.Builder.Artists.IArtistAlbumsBuilder.GetAsync(System.Collections.Generic.IEnumerable{FluentSpotifyApi.Builder.Artists.AlbumType},System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Gets Spotify catalog information about an artist’s albums.
            </summary>
            <param name="includeGroups">The list of keywords that will be used to filter the response. If not supplied, all album types will be returned.</param>
            <param name="market">
            Synonym for country. An ISO 3166-1 alpha-2 country code or the string from_token.
            Supply this parameter to limit the response to one particular geographical market.
            </param>
            <param name="limit">The number of album objects to return. Default: 20. Minimum: 1. Maximum: 50.</param>
            <param name="offset">The index of the first album to return. Default: 0 (i.e., the first album). Use with <paramref name="limit"/> to get the next set of albums.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns></returns>
        </member>
        <member name="T:FluentSpotifyApi.Builder.Artists.IArtistBuilder">
            <summary>
            The builder for "artists/{id}" endpoint.
            </summary>
        </member>
        <member name="P:FluentSpotifyApi.Builder.Artists.IArtistBuilder.Albums">
            <summary>
            Gets builder for "artists/{id}/albums" endpoint.
            </summary>
        </member>
        <member name="P:FluentSpotifyApi.Builder.Artists.IArtistBuilder.TopTracks">
            <summary>
            Gets builder for "artists/{id}/top-tracks" endpoint.
            </summary>
        </member>
        <member name="P:FluentSpotifyApi.Builder.Artists.IArtistBuilder.RelatedArtists">
            <summary>
            Gets builder for "artists/{id}/related-artists" endpoint.
            </summary>
        </member>
        <member name="M:FluentSpotifyApi.Builder.Artists.IArtistBuilder.GetAsync(System.Threading.CancellationToken)">
            <summary>
            Gets Spotify catalog information for a single artist identified by their unique Spotify ID.
            </summary>
            <param name="cancellationToken">The cancellation token.</param>
            <returns></returns>
        </member>
        <member name="T:FluentSpotifyApi.Builder.Artists.IArtistRelatedArtistsBuilder">
            <summary>
            The builder for "artists/{id}/related-artists" endpoint.
            </summary>
        </member>
        <member name="M:FluentSpotifyApi.Builder.Artists.IArtistRelatedArtistsBuilder.GetAsync(System.Threading.CancellationToken)">
            <summary>
            Gets Spotify catalog information about artists similar to a given artist.
            Similarity is based on analysis of the Spotify community’s listening history.
            </summary>
            <param name="cancellationToken">The cancellation token.</param>
            <returns></returns>
        </member>
        <member name="T:FluentSpotifyApi.Builder.Artists.IArtistsBuilder">
            <summary>
            The builder for "artists?ids={ids}" endpoint.
            </summary>
        </member>
        <member name="M:FluentSpotifyApi.Builder.Artists.IArtistsBuilder.GetAsync(System.Threading.CancellationToken)">
            <summary>
            Gets Spotify catalog information for several artists based on their Spotify IDs.
            </summary>
            <param name="cancellationToken">The cancellation token.</param>
            <returns></returns>
        </member>
        <member name="T:FluentSpotifyApi.Builder.Artists.IArtistTopTracksBuilder">
            <summary>
            The builder for "artists/{id}/top-tracks".
            </summary>
        </member>
        <member name="M:FluentSpotifyApi.Builder.Artists.IArtistTopTracksBuilder.GetAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Gets Spotify catalog information about an artist’s top tracks by country.
            </summary>
            <param name="country">An ISO 3166-1 alpha-2 country code or the string <c>from_token</c>. Synonym for <c>country</c>.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns></returns>
        </member>
        <member name="T:FluentSpotifyApi.Builder.Browse.IBrowseBuilder">
            <summary>
            The builder for "browse" endpoints that are used for getting playlists and new album releases
            featured on Spotify’s Browse tab.
            </summary>
        </member>
        <member name="M:FluentSpotifyApi.Builder.Browse.IBrowseBuilder.Categories">
            <summary>
            Gets builder for "browse/categories" endpoint.
            </summary>
        </member>
        <member name="M:FluentSpotifyApi.Builder.Browse.IBrowseBuilder.Categories(System.String)">
            <summary>
            Gets builder for "categories/{id}" endpoint.
            </summary>
            <param name="id">The category ID.</param>
        </member>
        <member name="P:FluentSpotifyApi.Builder.Browse.IBrowseBuilder.FeaturedPlaylists">
            <summary>
            Gets builder for "browse/featured-playlists" endpoint.
            </summary>
        </member>
        <member name="P:FluentSpotifyApi.Builder.Browse.IBrowseBuilder.NewReleases">
            <summary>
            Gets builder for "browse/new-releases" endpoint.
            </summary>
        </member>
        <member name="P:FluentSpotifyApi.Builder.Browse.IBrowseBuilder.Recommendations">
            <summary>
            Gets builder for "recommendations" endpoint.
            </summary>
        </member>
        <member name="T:FluentSpotifyApi.Builder.Browse.IBrowseCategoriesBuilder">
            <summary>
            The builder for "browse/categories" endpoint.
            </summary>
        </member>
        <member name="M:FluentSpotifyApi.Builder.Browse.IBrowseCategoriesBuilder.GetAsync(System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Gets a list of categories used to tag items in Spotify (on, for example, the Spotify player’s “Browse” tab).
            </summary>
            <param name="country">
            A country: an ISO 3166-1 alpha-2 country code.
            Provide this parameter if you want to narrow the list of returned categories to those relevant to a particular country.
            If omitted, the returned items will be globally relevant.
            </param>
            <param name="locale">
            The desired language, consisting of an ISO 639 language code and an ISO 3166-1 alpha-2 country code, joined by an underscore. (e.g. es_MX).
            Provide this parameter if you want the category metadata returned in a particular language.
            Note that, if locale is not supplied, or if the specified language is not available, all strings will be returned in the Spotify default language (American English).
            </param>
            <param name="limit">The maximum number of categories to return. Default: 20. Minimum: 1. Maximum: 50.</param>
            <param name="offset">The index of the first item to return. Default: 0 (the first object). Use with <paramref name="limit"/> to get the next set of categories.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns></returns>
        </member>
        <member name="T:FluentSpotifyApi.Builder.Browse.IBrowseCategoryBuilder">
            <summary>
            The builder for "categories/{id}" endpoint.
            </summary>
        </member>
        <member name="P:FluentSpotifyApi.Builder.Browse.IBrowseCategoryBuilder.Playlists">
            <summary>
            Gets builder for "browse/categories/{category_id}/playlists" endpoint.
            </summary>
        </member>
        <member name="M:FluentSpotifyApi.Builder.Browse.IBrowseCategoryBuilder.GetAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Gets a single category used to tag items in Spotify (on, for example, the Spotify player’s “Browse” tab).
            </summary>
            <param name="country">A country: an ISO 3166-1 alpha-2 country code. Provide this parameter to ensure that the category exists for a particular country.</param>
            <param name="locale">
            The desired language, consisting of an ISO 639 language code and an ISO 3166-1 alpha-2 country code, joined by an underscore. (e.g. es_MX).
            Provide this parameter if you want the category metadata returned in a particular language.
            Note that, if locale is not supplied, or if the specified language is not available, all strings will be returned in the Spotify default language (American English).
            </param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns></returns>
        </member>
        <member name="T:FluentSpotifyApi.Builder.Browse.IBrowseCategoryPlaylistsBuilder">
            <summary>
            The builder for "browse/categories/{category_id}/playlists" endpoint.
            </summary>
        </member>
        <member name="M:FluentSpotifyApi.Builder.Browse.IBrowseCategoryPlaylistsBuilder.GetAsync(System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Gets a list of Spotify playlists tagged with a particular category.
            </summary>
            <param name="country">A country: an ISO 3166-1 alpha-2 country code. Provide this parameter to ensure that the category exists for a particular country.</param>
            <param name="limit">The maximum number of items to return. Default: 20. Minimum: 1. Maximum: 50. </param>
            <param name="offset">The index of the first item to return. Default: 0 (the first object). Use with <paramref name="limit"/> to get the next set of items.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns></returns>
        </member>
        <member name="T:FluentSpotifyApi.Builder.Browse.IBrowseFeaturedPlaylistsBuilder">
            <summary>
            The builder for "browse/featured-playlists" endpoint.
            </summary>
        </member>
        <member name="M:FluentSpotifyApi.Builder.Browse.IBrowseFeaturedPlaylistsBuilder.GetAsync(System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Gets a list of Spotify featured playlists (shown, for example, on a Spotify player’s “Browse” tab).
            </summary>
            <param name="country">
            A country: an ISO 3166-1 alpha-2 country code. Provide this parameter if you want the list of returned items to be relevant to a particular country.
            If omitted, the returned items will be relevant to all countries.
            </param>
            <param name="locale">
            The desired language, consisting of a lowercase ISO 639-1 language code and an uppercase ISO 3166-1 alpha-2 country code, joined by an underscore.
            For example: es_MX, meaning “Spanish (Mexico)”. Provide this parameter if you want the results returned in a particular language (where available).
            Note that, if locale is not supplied, or if the specified language is not available, all strings will be returned in the Spotify default language (American English).
            </param>
            <param name="timestamp">
            Use this parameter to specify the user’s local time to get results tailored for that specific date and time in the day.
            If not provided, the response defaults to the current UTC time.
            </param>
            <param name="limit">The limit. Default: 20. Minimum: 1. Maximum: 50.</param>
            <param name="offset">The index of the first item to return. Default: 0 (the first object). Use with <paramref name="limit"/> to get the next set of items.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns></returns>
        </member>
        <member name="T:FluentSpotifyApi.Builder.Browse.IBrowseNewReleasesBuilder">
            <summary>
            The builder for "browse/new-releases" endpoint.
            </summary>
        </member>
        <member name="M:FluentSpotifyApi.Builder.Browse.IBrowseNewReleasesBuilder.GetAsync(System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Gets a list of new album releases featured in Spotify(shown, for example, on a Spotify player’s “Browse” tab).
            </summary>
            <param name="country">
            A country: an ISO 3166-1 alpha-2 country code. Provide this parameter if you want the list of returned items to be relevant to a particular country.
            If omitted, the returned items will be relevant to all countries.</param>
            <param name="limit">The maximum number of items to return. Default: 20. Minimum: 1. Maximum: 50.</param>
            <param name="offset">The index of the first item to return. Default: 0 (the first object). Use with <paramref name="limit"/> to get the next set of items.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns></returns>
        </member>
        <member name="T:FluentSpotifyApi.Builder.Browse.IBrowseRecommendationsBuilder">
            <summary>
            The builder for "recommendations" endpoint.
            </summary>
        </member>
        <member name="M:FluentSpotifyApi.Builder.Browse.IBrowseRecommendationsBuilder.GetAsync(System.Nullable{System.Int32},System.String,System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{System.String},System.Action{FluentSpotifyApi.Builder.Browse.ITuneableTrackAttributesBuilder},System.Threading.CancellationToken)">
            <summary>
            Creates a playlist-style listening experience based on seed artists, tracks and genres.
            </summary>
            <param name="limit">
            The target size of the list of recommended tracks.
            For seeds with unusually small pools or when highly restrictive filtering is applied, it may be impossible to generate the requested number of recommended tracks.
            Debugging information for such cases is available in the response. Default: 20. Minimum: 1. Maximum: 100.</param>
            <param name="market">
            An ISO 3166-1 alpha-2 country code or the string <c>from_token</c>. Provide this parameter if you want to apply Track Relinking.
            Because <see cref="M:FluentSpotifyApi.Builder.Browse.ITuneableTrackAttributeBuilder`1.Min(`0)"/>, <see cref="M:FluentSpotifyApi.Builder.Browse.ITuneableTrackAttributeBuilder`1.Max(`0)"/> and <see cref="M:FluentSpotifyApi.Builder.Browse.ITuneableTrackAttributeBuilder`1.Target(`0)"/>
            are applied to pools before relinking, the generated results may not precisely match the filters applied.
            Original, non-relinked tracks are available via the <see cref="P:FluentSpotifyApi.Model.Tracks.TrackBase.LinkedFrom"/> attribute of the relinked track response.
            </param>
            <param name="seedArtists">
            The list of Spotify IDs for seed artists.
            Up to 5 seed values may be provided in any combination of <paramref name="seedArtists"/>, <paramref name="seedTracks"/> and <paramref name="seedGenres"/>.
            </param>
            <param name="seedGenres">
            List of any genres in the set of available genre seeds.
            Up to 5 seed values may be provided in any combination of <paramref name="seedArtists"/>, <paramref name="seedTracks"/> and <paramref name="seedGenres"/>.
            </param>
            <param name="seedTracks">
            The list of Spotify IDs for a seed track.
            Up to 5 seed values may be provided in any combination of <paramref name="seedArtists"/>, <paramref name="seedTracks"/> and <paramref name="seedGenres"/>.
            </param>
            <param name="buildTunableTrackAttributes">The action for building tunable track attributes.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns></returns>
        </member>
        <member name="T:FluentSpotifyApi.Builder.Browse.ITuneableTrackAttributeBuilder`1">
            <summary>
            The tunable track attribute builder.
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="M:FluentSpotifyApi.Builder.Browse.ITuneableTrackAttributeBuilder`1.Min(`0)">
            <summary>
            Sets min value.
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="M:FluentSpotifyApi.Builder.Browse.ITuneableTrackAttributeBuilder`1.Max(`0)">
            <summary>
            Sets max value.
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="M:FluentSpotifyApi.Builder.Browse.ITuneableTrackAttributeBuilder`1.Target(`0)">
            <summary>
            Sets target value.
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="T:FluentSpotifyApi.Builder.Browse.ITuneableTrackAttributesBuilder">
            <summary>
            The tunable track attributes builder.
            </summary>
        </member>
        <member name="M:FluentSpotifyApi.Builder.Browse.ITuneableTrackAttributesBuilder.Acousticness(System.Action{FluentSpotifyApi.Builder.Browse.ITuneableTrackAttributeBuilder{System.Single}})">
            <summary>
            Sets acousticnesses.
            </summary>
            <param name="buildAttribute">The build attribute action.</param>
            <returns></returns>
        </member>
        <member name="M:FluentSpotifyApi.Builder.Browse.ITuneableTrackAttributesBuilder.Danceability(System.Action{FluentSpotifyApi.Builder.Browse.ITuneableTrackAttributeBuilder{System.Single}})">
            <summary>
            Sets danceability.
            </summary>
            <param name="buildAttribute">The build attribute action.</param>
            <returns></returns>
        </member>
        <member name="M:FluentSpotifyApi.Builder.Browse.ITuneableTrackAttributesBuilder.Duration(System.Action{FluentSpotifyApi.Builder.Browse.ITuneableTrackAttributeBuilder{System.TimeSpan}})">
            <summary>
            Sets duration in milliseconds.
            </summary>
            <param name="buildAttribute">The build attribute action.</param>
            <returns></returns>
        </member>
        <member name="M:FluentSpotifyApi.Builder.Browse.ITuneableTrackAttributesBuilder.Energy(System.Action{FluentSpotifyApi.Builder.Browse.ITuneableTrackAttributeBuilder{System.Single}})">
            <summary>
            Sets energy.
            </summary>
            <param name="buildAttribute">The build attribute action.</param>
            <returns></returns>
        </member>
        <member name="M:FluentSpotifyApi.Builder.Browse.ITuneableTrackAttributesBuilder.Instrumentalness(System.Action{FluentSpotifyApi.Builder.Browse.ITuneableTrackAttributeBuilder{System.Single}})">
            <summary>
            Sets instrumentalness.
            </summary>
            <param name="buildAttribute">The build attribute action.</param>
            <returns></returns>
        </member>
        <member name="M:FluentSpotifyApi.Builder.Browse.ITuneableTrackAttributesBuilder.Key(System.Action{FluentSpotifyApi.Builder.Browse.ITuneableTrackAttributeBuilder{System.Int32}})">
            <summary>
            Sets key.
            </summary>
            <param name="buildAttribute">The build attribute action.</param>
            <returns></returns>
        </member>
        <member name="M:FluentSpotifyApi.Builder.Browse.ITuneableTrackAttributesBuilder.Liveness(System.Action{FluentSpotifyApi.Builder.Browse.ITuneableTrackAttributeBuilder{System.Single}})">
            <summary>
            Sets liveness.
            </summary>
            <param name="buildAttribute">The build attribute action.</param>
            <returns></returns>
        </member>
        <member name="M:FluentSpotifyApi.Builder.Browse.ITuneableTrackAttributesBuilder.Loudness(System.Action{FluentSpotifyApi.Builder.Browse.ITuneableTrackAttributeBuilder{System.Single}})">
            <summary>
            Sets loudness.
            </summary>
            <param name="buildAttribute">The build attribute action.</param>
            <returns></returns>
        </member>
        <member name="M:FluentSpotifyApi.Builder.Browse.ITuneableTrackAttributesBuilder.Mode(System.Action{FluentSpotifyApi.Builder.Browse.ITuneableTrackAttributeBuilder{System.Int32}})">
            <summary>
            Sets mode.
            </summary>
            <param name="buildAttribute">The build attribute action.</param>
            <returns></returns>
        </member>
        <member name="M:FluentSpotifyApi.Builder.Browse.ITuneableTrackAttributesBuilder.Popularity(System.Action{FluentSpotifyApi.Builder.Browse.ITuneableTrackAttributeBuilder{System.Int32}})">
            <summary>
            Sets popularity.
            </summary>
            <param name="buildAttribute">The build attribute action.</param>
            <returns></returns>
        </member>
        <member name="M:FluentSpotifyApi.Builder.Browse.ITuneableTrackAttributesBuilder.Speechiness(System.Action{FluentSpotifyApi.Builder.Browse.ITuneableTrackAttributeBuilder{System.Single}})">
            <summary>
            Sets speechiness.
            </summary>
            <param name="buildAttribute">The build attribute action.</param>
            <returns></returns>
        </member>
        <member name="M:FluentSpotifyApi.Builder.Browse.ITuneableTrackAttributesBuilder.Tempo(System.Action{FluentSpotifyApi.Builder.Browse.ITuneableTrackAttributeBuilder{System.Single}})">
            <summary>
            Sets tempo.
            </summary>
            <param name="buildAttribute">The build attribute action.</param>
            <returns></returns>
        </member>
        <member name="M:FluentSpotifyApi.Builder.Browse.ITuneableTrackAttributesBuilder.TimeSignature(System.Action{FluentSpotifyApi.Builder.Browse.ITuneableTrackAttributeBuilder{System.Int32}})">
            <summary>
            Sets time signature.
            </summary>
            <param name="buildAttribute">The build attribute action.</param>
            <returns></returns>
        </member>
        <member name="M:FluentSpotifyApi.Builder.Browse.ITuneableTrackAttributesBuilder.Valence(System.Action{FluentSpotifyApi.Builder.Browse.ITuneableTrackAttributeBuilder{System.Single}})">
            <summary>
            Sets valence.
            </summary>
            <param name="buildAttribute">The build attribute action.</param>
            <returns></returns>
        </member>
        <member name="T:FluentSpotifyApi.Builder.Episodes.IEpisodeBuilder">
            <summary>
            The builder for "episodes/{id}" endpoint.
            </summary>
        </member>
        <member name="M:FluentSpotifyApi.Builder.Episodes.IEpisodeBuilder.GetAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Gets Spotify catalog information for a single episode identified by its unique Spotify ID.
            </summary>
            <param name="market">
            An ISO 3166-1 alpha-2 country code. If a country code is specified, only shows and episodes that are available in that market will be returned.
            If a valid user access token is specified in the request header, the country associated with the user account will take priority over this parameter.
            </param>
            <param name="cancellationToken">The cancellation token.</param>
        </member>
        <member name="T:FluentSpotifyApi.Builder.Episodes.IEpisodesBuilder">
            <summary>
            The builder for "episodes?ids={ids}" endpoint.
            </summary>
        </member>
        <member name="M:FluentSpotifyApi.Builder.Episodes.IEpisodesBuilder.GetAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Gets Spotify catalog information for several episodes based on their Spotify IDs.
            </summary>
            <param name="market">
            An ISO 3166-1 alpha-2 country code. If a country code is specified, only shows and episodes that are available in that market will be returned.
            If a valid user access token is specified in the request header, the country associated with the user account will take priority over this parameter.
            </param>
            <param name="cancellationToken">The cancellation token.</param>
        </member>
        <member name="T:FluentSpotifyApi.Builder.Me.Following.IFollowedItemsBuilder">
            <summary>
            The builder for "me/following" endpoint with IDs.
            </summary>
        </member>
        <member name="M:FluentSpotifyApi.Builder.Me.Following.IFollowedItemsBuilder.FollowAsync(System.Collections.Generic.IEnumerable{System.String},System.Threading.CancellationToken)">
            <summary>
            Adds the current user as a follower of the items.
            </summary>
            <param name="ids">Item IDs. A maximum of 50 IDs can be sent in one request.</param>
            <param name="cancellationToken">The cancellation token.</param>
        </member>
        <member name="M:FluentSpotifyApi.Builder.Me.Following.IFollowedItemsBuilder.UnfollowAsync(System.Collections.Generic.IEnumerable{System.String},System.Threading.CancellationToken)">
            <summary>
            Removes the current user as a follower of the items.
            </summary>
            <param name="ids">Item IDs. A maximum of 50 IDs can be sent in one request.</param>
            <param name="cancellationToken">The cancellation token.</param>
        </member>
        <member name="M:FluentSpotifyApi.Builder.Me.Following.IFollowedItemsBuilder.CheckAsync(System.Collections.Generic.IEnumerable{System.String},System.Threading.CancellationToken)">
            <summary>
            Checks to see if the current user is following the items.
            </summary>
            <param name="ids">Item IDs. A maximum of 50 IDs can be sent in one request.</param>
            <param name="cancellationToken">The cancellation token.</param>
        </member>
        <member name="T:FluentSpotifyApi.Builder.Me.Following.IFollowedPlaylistBuilder">
            <summary>
            The builder for "playlists/{playlistId}/followers" endpoint.
            </summary>
        </member>
        <member name="M:FluentSpotifyApi.Builder.Me.Following.IFollowedPlaylistBuilder.FollowAsync(System.String,System.Nullable{System.Boolean},System.Threading.CancellationToken)">
            <summary>
            Adds the current user as a follower of a playlist.
            </summary>
            <param name="id">The ID of playlist.</param>
            <param name="isPublic">
            Defaults to <c>true</c>. If <c>true</c> the playlist will be included in user’s public playlists, if false it will remain private.
            To be able to follow playlists privately, the user must have granted the <c>playlist-modify-private</c> scope.
            </param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns></returns>
        </member>
        <member name="M:FluentSpotifyApi.Builder.Me.Following.IFollowedPlaylistBuilder.UnfollowAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Removes the current user as a follower of a playlist.
            </summary>
            <param name="id">The ID of playlist.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns></returns>
        </member>
        <member name="M:FluentSpotifyApi.Builder.Me.Following.IFollowedPlaylistBuilder.CheckAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Checks to see if current user is following a specified playlist.
            </summary>
            <param name="id">The ID of playlist.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns></returns>
        </member>
        <member name="T:FluentSpotifyApi.Builder.Me.Following.IFollowingBuilder">
            <summary>
            The builder for "me/following" and "playlists/{playlistId}/followers" endpoints.
            These endpoints allow you manage the artists, users and playlists that a Spotify user follows.
            </summary>
        </member>
        <member name="P:FluentSpotifyApi.Builder.Me.Following.IFollowingBuilder.Artists">
            <summary>
            Gets builder for "me/following?type=artist" endpoint.
            </summary>
        </member>
        <member name="P:FluentSpotifyApi.Builder.Me.Following.IFollowingBuilder.Users">
            <summary>
            Gets builder for "me/following?type=user" endpoint.
            </summary>
        </member>
        <member name="P:FluentSpotifyApi.Builder.Me.Following.IFollowingBuilder.Playlists">
            <summary>
            Gets builder for "playlists/{playlistId}/followers" endpoint.
            </summary>
        </member>
        <member name="T:FluentSpotifyApi.Builder.Me.Following.IRetrievableFollowedItemsBuilder`1">
            <summary>
            The builder for "me/following endpoint".
            </summary>
            <typeparam name="T"></typeparam>
            <seealso cref="T:FluentSpotifyApi.Builder.Me.Following.IFollowedItemsBuilder"/>
        </member>
        <member name="M:FluentSpotifyApi.Builder.Me.Following.IRetrievableFollowedItemsBuilder`1.GetAsync(System.String,System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Gets the current user’s followed items.
            </summary>
            <param name="after">The last item ID retrieved from the previous request.</param>
            <param name="limit">The maximum number of items to return. Default: 20. Minimum: 1. Maximum: 50.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns></returns>
        </member>
        <member name="T:FluentSpotifyApi.Builder.Me.IMeBuilder">
            <summary>
            The builder for "me" and "users/{myUserId}/playlists" endpoints.
            </summary>
        </member>
        <member name="P:FluentSpotifyApi.Builder.Me.IMeBuilder.Personalization">
            <summary>
            Gets builder for "me/top" and "me/player" endpoints.
            These endpoints are used for retrieving information about the user’s listening habits.
            </summary>
        </member>
        <member name="P:FluentSpotifyApi.Builder.Me.IMeBuilder.Library">
            <summary>
            Gets builder for "me/albums" and "me/tracks" endpoints.
            These endpoints are used for retrieving information about, and managing, tracks and albums
            that the current user has saved in their “Your Music” library.
            </summary>
        </member>
        <member name="P:FluentSpotifyApi.Builder.Me.IMeBuilder.Following">
            <summary>
            Gets builder for "me/following" and "users/{ownerId}/playlists/{playlistId}/followers" endpoints.
            These endpoints allow you manage the artists, users and playlists that a Spotify user follows.
            </summary>
        </member>
        <member name="P:FluentSpotifyApi.Builder.Me.IMeBuilder.Playlists">
            <summary>
            Gets builder for "users/{myUserId}/playlists" endpoint.
            </summary>
        </member>
        <member name="P:FluentSpotifyApi.Builder.Me.IMeBuilder.Player">
            <summary>
            Gets builder for "me/player" endpoint.
            This endpoint is used for controlling Spotify devices.
            </summary>
        </member>
        <member name="M:FluentSpotifyApi.Builder.Me.IMeBuilder.GetAsync(System.Threading.CancellationToken)">
            <summary>
            Gets detailed profile information about the current user (including the current user’s username).
            </summary>
            <param name="cancellationToken">The cancellation token.</param>
        </member>
        <member name="T:FluentSpotifyApi.Builder.Me.Library.ILibraryBuilder">
            <summary>
            The builder for "me/albums", "me/tracks" and "me/shows" endpoints.
            These endpoints are used for retrieving information about, and managing, tracks, albums and shows
            that the current user has saved in their “Your Music” library.
            </summary>
        </member>
        <member name="P:FluentSpotifyApi.Builder.Me.Library.ILibraryBuilder.Albums">
            <summary>
            Gets builder for "me/albums" endpoint.
            </summary>
        </member>
        <member name="P:FluentSpotifyApi.Builder.Me.Library.ILibraryBuilder.Tracks">
            <summary>
            Gets builder for "me/tracks" endpoint.
            </summary>
        </member>
        <member name="P:FluentSpotifyApi.Builder.Me.Library.ILibraryBuilder.Shows">
            <summary>
            Gets builder for "me/tracks" endpoint.
            </summary>
        </member>
        <member name="T:FluentSpotifyApi.Builder.Me.Library.ILibraryItemsBuilder`1">
            <summary>
            The builder for me/{entities} endpoint with IDs.
            </summary>
            <typeparam name="T">The item type.</typeparam>
        </member>
        <member name="M:FluentSpotifyApi.Builder.Me.Library.ILibraryItemsBuilder`1.GetAsync(System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.Threading.CancellationToken)">
            <summary>
            Gets a list of items saved in the current Spotify user’s “Your Music” library.
            </summary>
            <param name="limit">The maximum number of objects to return. Default: 20. Minimum: 1. Maximum: 50.</param>
            <param name="offset">The index of the first object to return. Default: 0 (i.e., the first object). Use with <paramref name="limit"/> to get the next set of objects.</param>
            <param name="market">An ISO 3166-1 alpha-2 country code or the string <c>from_token</c>. Provide this parameter if you want to apply Track Relinking.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns></returns>
        </member>
        <member name="M:FluentSpotifyApi.Builder.Me.Library.ILibraryItemsBuilder`1.SaveAsync(System.Collections.Generic.IEnumerable{System.String},System.Threading.CancellationToken)">
            <summary>
            Saves items to the current user’s “Your Music” library.
            </summary>
            <param name="ids">Item IDs. Maximum: 50 IDs.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns></returns>
        </member>
        <member name="M:FluentSpotifyApi.Builder.Me.Library.ILibraryItemsBuilder`1.RemoveAsync(System.Collections.Generic.IEnumerable{System.String},System.Threading.CancellationToken)">
            <summary>
            Removes items from the current user’s “Your Music” library.
            </summary>
            <param name="ids">Item IDs. Maximum: 50 IDs.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns></returns>
        </member>
        <member name="M:FluentSpotifyApi.Builder.Me.Library.ILibraryItemsBuilder`1.CheckAsync(System.Collections.Generic.IEnumerable{System.String},System.Threading.CancellationToken)">
            <summary>
            Checks if items are already saved in the current Spotify user’s “Your Music” library.
            </summary>
            <param name="ids">Item IDs. Maximum: 50 IDs.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns></returns>
        </member>
        <member name="T:FluentSpotifyApi.Builder.Me.Personalization.IPersonalizationBuilder">
            <summary>
            The builder for "me/top" endpoint.
            This endpoint is used for retrieving information about the user’s listening habits.
            </summary>
        </member>
        <member name="P:FluentSpotifyApi.Builder.Me.Personalization.IPersonalizationBuilder.TopArtists">
            <summary>
            Gets builder for "me/top/artists" endpoint.
            </summary>
        </member>
        <member name="P:FluentSpotifyApi.Builder.Me.Personalization.IPersonalizationBuilder.TopTracks">
            <summary>
            Gets builder for "me/top/tracks" endpoint.
            </summary>
        </member>
        <member name="T:FluentSpotifyApi.Builder.Me.Personalization.ITopBuilder`1">
            <summary>
            The builder for "me/top/{entity}" endpoint.
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="M:FluentSpotifyApi.Builder.Me.Personalization.ITopBuilder`1.GetAsync(System.Nullable{FluentSpotifyApi.Builder.Me.Personalization.TimeRange},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Gets the current user’s top artists or tracks based on calculated affinity.
            </summary>
            <param name="timeRange">Over what time frame the affinities are computed. Default: <see cref="F:FluentSpotifyApi.Builder.Me.Personalization.TimeRange.MediumTerm"/>.</param>
            <param name="limit">The number of entities to return. Default: 20. Minimum: 1. Maximum: 50.</param>
            <param name="offset">The index of the first entity to return. Default: 0 (i.e., the first track). Use with <paramref name="offset"/> to get the next set of entities.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns></returns>
        </member>
        <member name="T:FluentSpotifyApi.Builder.Me.Personalization.TimeRange">
            <summary>
            The affinities time frame.
            </summary>
        </member>
        <member name="F:FluentSpotifyApi.Builder.Me.Personalization.TimeRange.LongTerm">
            <summary>
            Calculated from several years of data and including all new data as it becomes available.
            </summary>
        </member>
        <member name="F:FluentSpotifyApi.Builder.Me.Personalization.TimeRange.MediumTerm">
            <summary>
            Approximately last 6 months.
            </summary>
        </member>
        <member name="F:FluentSpotifyApi.Builder.Me.Personalization.TimeRange.ShortTerm">
            <summary>
            Approximately last 4 weeks.
            </summary>
        </member>
        <member name="T:FluentSpotifyApi.Builder.Me.Player.IActiveDevicePlaybackBuilder">
            <summary>
            The builder for active device's playback.
            </summary>
            <seealso cref="T:FluentSpotifyApi.Builder.Me.Player.IPlaybackBuilder"/>
        </member>
        <member name="M:FluentSpotifyApi.Builder.Me.Player.IActiveDevicePlaybackBuilder.GetCurrentAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Gets information about the user’s current playback state, including track or episode, progress, and active device.
            </summary>
            <param name="market">An ISO 3166-1 alpha-2 country code or the string <c>from_token</c>. Provide this parameter if you want to apply Track Relinking.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns></returns>
        </member>
        <member name="M:FluentSpotifyApi.Builder.Me.Player.IActiveDevicePlaybackBuilder.GetCurrentItemAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Gets the object currently being played on the user’s Spotify account.
            </summary>
            <param name="market">An ISO 3166-1 alpha-2 country code or the string <c>from_token</c>. Provide this parameter if you want to apply Track Relinking.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns></returns>
        </member>
        <member name="M:FluentSpotifyApi.Builder.Me.Player.IActiveDevicePlaybackBuilder.TransferAsync(System.String,System.Nullable{System.Boolean},System.Threading.CancellationToken)">
            <summary>
            Transfers playback to a new device and determine if it should start playing.
            </summary>
            <param name="deviceId">The ID of the device on which playback should be started/transferred.</param>
            <param name="play"><c>true</c>: ensure playback happens on new device. <c>false</c> or not provided: keep the current playback state.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns></returns>
        </member>
        <member name="T:FluentSpotifyApi.Builder.Me.Player.IDevicePlaybackBuilder">
            <summary>
            The builder for specified device's playback.
            </summary>
            <seealso cref="T:FluentSpotifyApi.Builder.Me.Player.IPlaybackBuilder"/>
        </member>
        <member name="T:FluentSpotifyApi.Builder.Me.Player.IDevicesBuilder">
            <summary>
            The builder for "me/player/devices" endpoint.
            </summary>
        </member>
        <member name="M:FluentSpotifyApi.Builder.Me.Player.IDevicesBuilder.GetAsync(System.Threading.CancellationToken)">
            <summary>
            Get information about a user’s available devices.
            </summary>
            <param name="cancellationToken">The cancellation token.</param>
        </member>
        <member name="T:FluentSpotifyApi.Builder.Me.Player.IPlaybackBuilder">
            <summary>
            The builder for the playback.
            </summary>
        </member>
        <member name="P:FluentSpotifyApi.Builder.Me.Player.IPlaybackBuilder.Queue">
            <summary>
            Gets builder for "me/player/queue" endpoint.
            </summary>
        </member>
        <member name="M:FluentSpotifyApi.Builder.Me.Player.IPlaybackBuilder.StartNewAsync(System.String,System.Nullable{System.Int32},System.Nullable{System.TimeSpan},System.Threading.CancellationToken)">
            <summary>
            Starts new playback.
            </summary>
            <param name="contextUri">The Spotify URI of artist, album or playlist. Use <see cref="T:FluentSpotifyApi.Builder.SpotifyUri"/> to get URI from ID.</param>
            <param name="offset">The zero based position of an item in <paramref name="contextUri"/> where the playback will be started.</param>
            <param name="position">The time position within the item where the playback will be started.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns></returns>
        </member>
        <member name="M:FluentSpotifyApi.Builder.Me.Player.IPlaybackBuilder.StartNewAsync(System.Collections.Generic.IEnumerable{System.String},System.String,System.Nullable{System.TimeSpan},System.Threading.CancellationToken)">
            <summary>
            Starts new playback.
            </summary>
            <param name="uris">The Spotify URIs of track or episodes. Use <see cref="T:FluentSpotifyApi.Builder.SpotifyUri"/> to get URI from ID.</param>
            <param name="offset">The Spotify URI of track o episode where the playback will be started. Use <see cref="T:FluentSpotifyApi.Builder.SpotifyUri"/> to get URI from ID.</param>
            <param name="position">The time position within the track or episode where the playback will be started.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns></returns>
        </member>
        <member name="M:FluentSpotifyApi.Builder.Me.Player.IPlaybackBuilder.ResumeAsync(System.Threading.CancellationToken)">
            <summary>
            Resumes user's playback.
            </summary>
            <param name="cancellationToken">The cancellation token.</param>
        </member>
        <member name="M:FluentSpotifyApi.Builder.Me.Player.IPlaybackBuilder.PauseAsync(System.Threading.CancellationToken)">
            <summary>
            Pauses user's playback.
            </summary>
            <param name="cancellationToken">The cancellation token.</param>
        </member>
        <member name="M:FluentSpotifyApi.Builder.Me.Player.IPlaybackBuilder.SkipToNextAsync(System.Threading.CancellationToken)">
            <summary>
            Skips to next track in the user’s queue.
            </summary>
            <param name="cancellationToken">The cancellation token.</param>
        </member>
        <member name="M:FluentSpotifyApi.Builder.Me.Player.IPlaybackBuilder.SkipToPreviousAsync(System.Threading.CancellationToken)">
            <summary>
            Skips to previous track in the user’s queue.
            </summary>
            <param name="cancellationToken">The cancellation token.</param>
        </member>
        <member name="M:FluentSpotifyApi.Builder.Me.Player.IPlaybackBuilder.SeekAsync(System.TimeSpan,System.Threading.CancellationToken)">
            <summary>
            Seeks to the given position in the user’s currently playing track.
            </summary>
            <param name="position">
            The time position to seek to. Must be a positive number.
            Passing in a position that is greater than the length of the track will cause the player to start playing the next song.</param>
            <param name="cancellationToken">The cancellation token.</param>
        </member>
        <member name="M:FluentSpotifyApi.Builder.Me.Player.IPlaybackBuilder.SetRepeatModeAsync(FluentSpotifyApi.Builder.Me.Player.RepeatMode,System.Threading.CancellationToken)">
            <summary>
            Sets the repeat mode for user’s playback.
            </summary>
            <param name="repeatMode">The repeat mode.</param>
            <param name="cancellationToken">The cancellation token.</param>
        </member>
        <member name="M:FluentSpotifyApi.Builder.Me.Player.IPlaybackBuilder.SetVolumeAsync(System.Int32,System.Threading.CancellationToken)">
            <summary>
            Sets the volume for user’s playback.
            </summary>
            <param name="volumePercent">The volume to set. Must be a value from 0 to 100 inclusive.</param>
            <param name="cancellationToken">The cancellation token.</param>
        </member>
        <member name="M:FluentSpotifyApi.Builder.Me.Player.IPlaybackBuilder.TurnOnShuffleAsync(System.Threading.CancellationToken)">
            <summary>
            Turns shuffle on for user's playback.
            </summary>
            <param name="cancellationToken">The cancellation token.</param>
        </member>
        <member name="M:FluentSpotifyApi.Builder.Me.Player.IPlaybackBuilder.TurnOffShuffleAsync(System.Threading.CancellationToken)">
            <summary>
            Turns shuffle off for user's playback.
            </summary>
            <param name="cancellationToken">The cancellation token.</param>
        </member>
        <member name="T:FluentSpotifyApi.Builder.Me.Player.IPlaybackQueueBuilder">
            <summary>
            The builder for "me/player/queue" endpoint.
            </summary>
        </member>
        <member name="M:FluentSpotifyApi.Builder.Me.Player.IPlaybackQueueBuilder.AddAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Adds an item to the end of the user’s current playback queue.
            </summary>
            <param name="uri">
            The uri of the item to add to the queue. Must be a track or an episode uri.
            Use <see cref="T:FluentSpotifyApi.Builder.SpotifyUri"/> to get URI from ID.
            </param>
            <param name="cancellationToken">The cancellation token.</param>
        </member>
        <member name="T:FluentSpotifyApi.Builder.Me.Player.IPlayerBuilder">
            <summary>
            The builder for "me/player" endpoint.
            This endpoint is used for controlling Spotify devices.
            </summary>
        </member>
        <member name="P:FluentSpotifyApi.Builder.Me.Player.IPlayerBuilder.RecentlyPlayedTracks">
            <summary>
            Gets builder for "me/player/recently-played" endpoint.
            </summary>
        </member>
        <member name="P:FluentSpotifyApi.Builder.Me.Player.IPlayerBuilder.Devices">
            <summary>
            Gets builder for "me/player/devices" endpoint.
            </summary>
        </member>
        <member name="M:FluentSpotifyApi.Builder.Me.Player.IPlayerBuilder.Playback">
            <summary>
            Gets builder for active device's playback.
            </summary>
        </member>
        <member name="M:FluentSpotifyApi.Builder.Me.Player.IPlayerBuilder.Playback(System.String)">
            <summary>
            Gets builder for specified device's playback.
            </summary>
            <param name="deviceId">The device ID.</param>
        </member>
        <member name="T:FluentSpotifyApi.Builder.Me.Player.IRecentlyPlayedTracksBuilder">
            <summary>
            The builder for "me/player/recently-played" endpoint.
            </summary>
        </member>
        <member name="M:FluentSpotifyApi.Builder.Me.Player.IRecentlyPlayedTracksBuilder.GetAsync(System.Nullable{System.Int32},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Threading.CancellationToken)">
            <summary>
            Get tracks from the current user’s recently played tracks.
            </summary>
            <param name="limit">The maximum number of items to return. Default: 20. Minimum: 1. Maximum: 50.</param>
            <param name="after">
            Returns all items after (but not including) this cursor position.
            If <paramref name="after"/> is specified, <paramref name="before"/> must not be specified.
            </param>
            <param name="before">
            Returns all items before (but not including) this cursor position.
            If <paramref name="before"/> is specified, <paramref name="after"/> must not be specified.
            </param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns></returns>
        </member>
        <member name="T:FluentSpotifyApi.Builder.Me.Player.RepeatMode">
            <summary>
            The playback repeat mode.
            </summary>
        </member>
        <member name="F:FluentSpotifyApi.Builder.Me.Player.RepeatMode.Track">
            <summary>
            Will repeat the current track.
            </summary>
        </member>
        <member name="F:FluentSpotifyApi.Builder.Me.Player.RepeatMode.Context">
            <summary>
            Will repeat the current context.
            </summary>
        </member>
        <member name="F:FluentSpotifyApi.Builder.Me.Player.RepeatMode.Off">
            <summary>
            Will turn repeat off.
            </summary>
        </member>
        <member name="T:FluentSpotifyApi.Builder.Playlists.IPlaylistBuilder">
            <summary>
            The builder for "playlists/{id}" endpoint.
            </summary>
        </member>
        <member name="P:FluentSpotifyApi.Builder.Playlists.IPlaylistBuilder.Images">
            <summary>
            Gets builder for "playlists/{id}/images" endpoint.
            </summary>
        </member>
        <member name="P:FluentSpotifyApi.Builder.Playlists.IPlaylistBuilder.Items">
            <summary>
            Gets builder for "playlists/{id}/tracks" endpoint.
            </summary>
        </member>
        <member name="M:FluentSpotifyApi.Builder.Playlists.IPlaylistBuilder.GetAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Gets a playlist owned by a Spotify user.
            </summary>
            <param name="fields">A comma-separated list of the fields to return. If omitted, all fields are returned.</param>
            <param name="market">
            An ISO 3166-1 alpha-2 country code or the string <c>from_token</c>. Provide this parameter if you want to apply Track Relinking.
            For episodes, if a valid user access token is specified in the request header, the country associated with the user account will take priority over this parameter.
            </param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns></returns>
        </member>
        <member name="M:FluentSpotifyApi.Builder.Playlists.IPlaylistBuilder.GetAsync(System.Action{FluentSpotifyApi.Expressions.Fields.IFieldsBuilder{FluentSpotifyApi.Model.Playlists.Playlist}},System.String,System.Threading.CancellationToken)">
            <summary>
            Gets a playlist owned by a Spotify user.
            </summary>
            <param name="buildFields">
            The action for building fields.
            The <see cref="M:FluentSpotifyApi.Expressions.Fields.FieldsProvider.Get``1(System.Action{FluentSpotifyApi.Expressions.Fields.IFieldsBuilder{``0}})"/> method can be used to get fields in string format.
            </param>
            <param name="market">
            An ISO 3166-1 alpha-2 country code or the string <c>from_token</c>. Provide this parameter if you want to apply Track Relinking.
            For episodes, if a valid user access token is specified in the request header, the country associated with the user account will take priority over this parameter.
            </param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns></returns>
        </member>
        <member name="M:FluentSpotifyApi.Builder.Playlists.IPlaylistBuilder.ChangeDetailsAsync(FluentSpotifyApi.Model.Playlists.ChangePlaylistDetailsRequest,System.Threading.CancellationToken)">
            <summary>
            Changes a playlist’s name and public/private state. (The user must, of course, own the playlist.)
            </summary>
            <param name="changePlaylistDetailsRequest">The request for changing playlist details.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns></returns>
        </member>
        <member name="M:FluentSpotifyApi.Builder.Playlists.IPlaylistBuilder.CheckFollowersAsync(System.Collections.Generic.IEnumerable{System.String},System.Threading.CancellationToken)">
            <summary>
            Checks to see if one or more Spotify users are following a specified playlist.
            </summary>
            <param name="userIds">
            The list of user IDs. Maximum: 5.
            </param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns></returns>
        </member>
        <member name="T:FluentSpotifyApi.Builder.Playlists.IPlaylistImagesBuilder">
            <summary>
            The builder for "playlists/{id}/images" endpoint.
            </summary>
        </member>
        <member name="M:FluentSpotifyApi.Builder.Playlists.IPlaylistImagesBuilder.GetAsync(System.Threading.CancellationToken)">
            <summary>
            Gets the current image associated with a specific playlist.
            </summary>
            <param name="cancellationToken">The cancellation token.</param>
            <returns></returns>
        </member>
        <member name="M:FluentSpotifyApi.Builder.Playlists.IPlaylistImagesBuilder.UpdateAsync(System.Byte[],System.Threading.CancellationToken)">
            <summary>
            Replaces the image used to represent a specific playlist.
            </summary>
            <param name="jpegCover">The JPEG cover byte array.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns></returns>
        </member>
        <member name="T:FluentSpotifyApi.Builder.Playlists.IPlaylistItemsBuilder">
            <summary>
            The builder for "playlists/{id}/tracks" endpoint.
            </summary>
        </member>
        <member name="M:FluentSpotifyApi.Builder.Playlists.IPlaylistItemsBuilder.GetAsync(System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Gets full details of the items of a playlist owned by a Spotify user.
            </summary>
            <param name="fields">A comma-separated list of the fields to return. If omitted, all fields are returned.</param>
            <param name="market">
            An ISO 3166-1 alpha-2 country code or the string <c>from_token</c>. Provide this parameter if you want to apply Track Relinking.
            For episodes, if a valid user access token is specified in the request header, the country associated with the user account will take priority over this parameter.
            </param>
            <param name="limit">The maximum number of items to return. Default: 100. Minimum: 1. Maximum: 100.</param>
            <param name="offset">The index of the first item to return. Default: 0 (the first object).</param>
            <param name="cancellationToken">The cancellation token.</param>
        </member>
        <member name="M:FluentSpotifyApi.Builder.Playlists.IPlaylistItemsBuilder.GetAsync(System.Action{FluentSpotifyApi.Expressions.Fields.IFieldsBuilder{FluentSpotifyApi.Model.Page{FluentSpotifyApi.Model.Playlists.PlaylistTrack}}},System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Get full details of the items of a playlist owned by a Spotify user.
            </summary>
            <param name="buildFields">
            The action for building fields.
            The <see cref="M:FluentSpotifyApi.Expressions.Fields.FieldsProvider.Get``1(System.Action{FluentSpotifyApi.Expressions.Fields.IFieldsBuilder{``0}})"/> method can be used to get fields in string format.
            </param>
            <param name="market">
            An ISO 3166-1 alpha-2 country code or the string <c>from_token</c>. Provide this parameter if you want to apply Track Relinking.
            For episodes, if a valid user access token is specified in the request header, the country associated with the user account will take priority over this parameter.
            </param>
            <param name="limit">The maximum number of items to return. Default: 100. Minimum: 1. Maximum: 100.</param>
            <param name="offset">The index of the first item to return. Default: 0 (the first object).</param>
            <param name="cancellationToken">The cancellation token.</param>
        </member>
        <member name="M:FluentSpotifyApi.Builder.Playlists.IPlaylistItemsBuilder.AddAsync(System.Collections.Generic.IEnumerable{System.String},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Adds one or more items to a user’s playlist.
            </summary>
            <param name="uris">
            The list of Spotify URIs to add, can be track or episode URIs. Maximum: 100.
            Use <see cref="T:FluentSpotifyApi.Builder.SpotifyUri"/> to get URI from ID.
            </param>
            <param name="position">The position to insert the items, a zero-based index. If omitted, the items will be appended to the playlist.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns></returns>
        </member>
        <member name="M:FluentSpotifyApi.Builder.Playlists.IPlaylistItemsBuilder.ReplaceAsync(System.Collections.Generic.IEnumerable{System.String},System.Threading.CancellationToken)">
            <summary>
            Replaces all the items in a playlist, overwriting its existing items.
            This powerful request can be useful for replacing items, re-ordering existing items, or clearing the playlist.
            </summary>
            <param name="uris">
            The list of Spotify URIs, can be track or episodes URIs. Maximum: 100.
            Use <see cref="T:FluentSpotifyApi.Builder.SpotifyUri"/> to get URI from ID.
            </param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns></returns>
        </member>
        <member name="M:FluentSpotifyApi.Builder.Playlists.IPlaylistItemsBuilder.RemoveAsync(System.Collections.Generic.IEnumerable{System.String},System.Threading.CancellationToken)">
            <summary>
            Removes one or more items from a user’s playlist.
            </summary>
            <param name="uris">
            The list of Spotify URIs to remove, can be track or episode URIs. Maximum: 100.
            Use <see cref="T:FluentSpotifyApi.Builder.SpotifyUri"/> to get URI from ID.
            </param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns></returns>
        </member>
        <member name="M:FluentSpotifyApi.Builder.Playlists.IPlaylistItemsBuilder.RemoveAsync(System.Collections.Generic.IEnumerable{FluentSpotifyApi.Model.Playlists.UriWithPositions},System.String,System.Threading.CancellationToken)">
            <summary>
            Removes items by occurrences at given positions.
            </summary>
            <param name="urisWithPositions">
            The list of Spotify URIs at given positions in playlist to remove, can be track or episode URIs. Maximum: 100.
            Use <see cref="T:FluentSpotifyApi.Builder.SpotifyUri"/> to get URI from ID.
            </param>
            <param name="snapshotId">The playlist's snapshot ID against which you want to make the changes.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns></returns>
        </member>
        <member name="M:FluentSpotifyApi.Builder.Playlists.IPlaylistItemsBuilder.RemoveAsync(System.Collections.Generic.IEnumerable{System.Int32},System.String,System.Threading.CancellationToken)">
            <summary>
            Removes items by occurrences at given positions.
            </summary>
            <param name="positions">The item positions in playlist.</param>
            <param name="snapshotId">The playlist's snapshot ID against which you want to make the changes.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns></returns>
        </member>
        <member name="M:FluentSpotifyApi.Builder.Playlists.IPlaylistItemsBuilder.ReorderAsync(System.Int32,System.Int32,System.Nullable{System.Int32},System.String,System.Threading.CancellationToken)">
            <summary>
            Reorders an item or a group of items in a playlist.
            </summary>
            <param name="rangeStart">The position of the first item to be reordered.</param>
            <param name="insertBefore">
            The position where the items should be inserted.
            To reorder the items to the end of the playlist, simply set <paramref name="insertBefore"/> to the position after the last item.
            </param>
            <param name="rangeLength">
            The amount of items to be reordered. Defaults to 1 if not set.
            The range of items to be reordered begins from the <paramref name="rangeStart"/> position, and includes the <paramref name="rangeLength"/> subsequent items.
            </param>
            <param name="snapshotId">The playlist’s snapshot ID against which you want to make the changes.</param>
            <param name="cancellationToken">The playlist's snapshot ID against which you want to make the changes.</param>
            <returns></returns>
        </member>
        <member name="T:FluentSpotifyApi.Builder.Search.Entity">
            <summary>
            The entity.
            </summary>
        </member>
        <member name="F:FluentSpotifyApi.Builder.Search.Entity.Album">
            <summary>
            The album
            </summary>
        </member>
        <member name="F:FluentSpotifyApi.Builder.Search.Entity.Artist">
            <summary>
            The artist
            </summary>
        </member>
        <member name="F:FluentSpotifyApi.Builder.Search.Entity.Playlist">
            <summary>
            The playlist
            </summary>
        </member>
        <member name="F:FluentSpotifyApi.Builder.Search.Entity.Track">
            <summary>
            The track
            </summary>
        </member>
        <member name="F:FluentSpotifyApi.Builder.Search.Entity.Show">
            <summary>
            The track
            </summary>
        </member>
        <member name="F:FluentSpotifyApi.Builder.Search.Entity.Episode">
            <summary>
            The track
            </summary>
        </member>
        <member name="T:FluentSpotifyApi.Builder.Search.ExternalContent">
            <summary>
            The external content.
            </summary>
        </member>
        <member name="F:FluentSpotifyApi.Builder.Search.ExternalContent.Audio">
            <summary>
            Audio content.
            </summary>
        </member>
        <member name="T:FluentSpotifyApi.Builder.Search.ISearchBuilder">
            <summary>
            The builder for "search" endpoint.
            </summary>
        </member>
        <member name="P:FluentSpotifyApi.Builder.Search.ISearchBuilder.Albums">
            <summary>
            Gets builder for "search?type=album" endpoint.
            </summary>
        </member>
        <member name="P:FluentSpotifyApi.Builder.Search.ISearchBuilder.Artists">
            <summary>
            Gets builder for "search?type=artist" endpoint.
            </summary>
        </member>
        <member name="P:FluentSpotifyApi.Builder.Search.ISearchBuilder.Playlists">
            <summary>
            Gets builder for "search?type=playlist" endpoint.
            </summary>
        </member>
        <member name="P:FluentSpotifyApi.Builder.Search.ISearchBuilder.Tracks">
            <summary>
            Gets builder for "search?type=track" endpoint.
            </summary>
        </member>
        <member name="P:FluentSpotifyApi.Builder.Search.ISearchBuilder.Shows">
            <summary>
            Gets builder for "search?type=show" endpoint.
            </summary>
        </member>
        <member name="P:FluentSpotifyApi.Builder.Search.ISearchBuilder.Episodes">
            <summary>
            Gets builder for "search?type=episode" endpoint.
            </summary>
        </member>
        <member name="M:FluentSpotifyApi.Builder.Search.ISearchBuilder.Entities(FluentSpotifyApi.Builder.Search.Entity[])">
            <summary>
            Gets builder for "search?type={entities}" endpoint.
            </summary>
            <param name="entities">The entities.</param>
            <returns></returns>
        </member>
        <member name="M:FluentSpotifyApi.Builder.Search.ISearchBuilder.Entities">
            <summary>
            Gets builder for "search?type={allEntities}" endpoint.
            </summary>
            <returns></returns>
        </member>
        <member name="T:FluentSpotifyApi.Builder.Search.ISearchTypeBuilder`1">
            <summary>
            The builder for "search?type={entities}" endpoint.
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="M:FluentSpotifyApi.Builder.Search.ISearchTypeBuilder`1.Matching(System.String)">
            <summary>
            Gets builder for "search?type={entities}&amp;q={query}" endpoint.
            </summary>
            <param name="query">The query.</param>
        </member>
        <member name="M:FluentSpotifyApi.Builder.Search.ISearchTypeBuilder`1.Matching(System.Linq.Expressions.Expression{System.Func{FluentSpotifyApi.Builder.Search.QueryFields,System.Boolean}})">
            <summary>
            Gets builder for "search?type={entities}&amp;q={query}" endpoint.
            </summary>
            <param name="predicate">
            The predicate expression. The <c>==</c> operator is used for exact match while <see cref="M:System.String.Contains(System.String)"/> method is used for partial match.
            The <c>&lt;=</c> and <c>&gt;=</c> operators can be used to specify <see cref="P:FluentSpotifyApi.Builder.Search.QueryFields.Year"/> range. Multiple statements can be combined using <c>&amp;&amp;</c>
            or <c>||</c> operators. Since search query does not support precedence of operators, the operands and operators are just emitted from left to right.
            There is also a limited support for negation. The <c>!=</c> operator or <c>!</c><see cref="M:System.String.Contains(System.String)"/> method call can be used to negate match.
            To negate <see cref="P:FluentSpotifyApi.Builder.Search.QueryFields.Year"/> range, the range expression must be prefixed with <c>!</c> operator (e.g. <c>!(f.Year &gt;= 2000 &amp;&amp; f.Year &lt;= 2015)</c>).
            The <see cref="M:FluentSpotifyApi.Expressions.Query.QueryProvider.Get``1(System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})"/> method can be used to get query in string format.
            </param>
        </member>
        <member name="M:FluentSpotifyApi.Builder.Search.ISearchTypeBuilder`1.Matching(System.Linq.Expressions.Expression{System.Func{FluentSpotifyApi.Builder.Search.QueryFields,System.Boolean}},FluentSpotifyApi.Expressions.Query.QueryOptions)">
            <summary>
            Gets builder for "search?type={entities}&amp;q={query}" endpoint.
            </summary>
            <param name="predicate">The predicate expression. The <c>==</c> operator is used for exact match while <see cref="M:System.String.Contains(System.String)" /> method is used for partial match.
            The <c>&lt;=</c> and <c>&gt;=</c> operators can be used to specify <see cref="P:FluentSpotifyApi.Builder.Search.QueryFields.Year" /> range. Multiple statements can be combined using <c>&amp;&amp;</c>
            or <c>||</c> operators. Since search query does not support precedence of operators, the operands and operators are just emitted from left to right.
            There is also a limited support for negation. The <c>!=</c> operator or <c>!</c><see cref="M:System.String.Contains(System.String)" /> method call can be used to negate match.
            To negate <see cref="P:FluentSpotifyApi.Builder.Search.QueryFields.Year" /> range, the range expression must be prefixed with <c>!</c> operator (e.g. <c>!(f.Year &gt;= 2000 &amp;&amp; f.Year &lt;= 2015)</c>).
            The <see cref="M:FluentSpotifyApi.Expressions.Query.QueryProvider.Get``1(System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},FluentSpotifyApi.Expressions.Query.QueryOptions)" /> method can be used to get query in string format.</param>
            <param name="queryOptions">The query options.</param>
        </member>
        <member name="T:FluentSpotifyApi.Builder.Search.ISearchTypeQueryBuilder`1">
            <summary>
            The builder for "search?type={entities}&amp;q={query}" endpoint.
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="M:FluentSpotifyApi.Builder.Search.ISearchTypeQueryBuilder`1.GetAsync(System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Collections.Generic.IEnumerable{FluentSpotifyApi.Builder.Search.ExternalContent},System.Threading.CancellationToken)">
            <summary>
            Searches for the entities of specified type by specific query.
            </summary>
            <param name="market">
            An ISO 3166-1 alpha-2 country code or the string <c>from_token</c>. If a country code is specified, only content that is playable in that market is returned.
            Playlist results are not affected by the market parameter.
            If market is set to <c>from_token</c>, and a valid access token is specified in the request header, only content playable in the country associated with the user account, is returned.
            Users can view the country that is associated with their account in the account settings.
            A user must grant access to the <c>user-read-private</c> scope prior to when the access token is issued.
            </param>
            <param name="limit">
            The maximum number of results to return. Default: 20. Minimum: 1. Maximum: 50.
            Note: The limit is applied within each type, not on the total response.
            </param>
            <param name="offset">
            The index of the first result to return.
            Default: 0 (i.e., the first result). Maximum offset (including limit): 2,000. Use with <paramref name="limit"/> to get the next page of search results.
            </param>
            <param name="includeExternal">
            If <see cref="F:FluentSpotifyApi.Builder.Search.ExternalContent.Audio"/> is specified the response will include any relevant audio content that is hosted externally.
            By default external content is filtered out from responses.
            </param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns></returns>
        </member>
        <member name="T:FluentSpotifyApi.Builder.Search.QueryFields">
            <summary>
            The search query fields.
            </summary>
        </member>
        <member name="P:FluentSpotifyApi.Builder.Search.QueryFields.Any">
            <summary>
            Represents any field.
            </summary>
        </member>
        <member name="P:FluentSpotifyApi.Builder.Search.QueryFields.Album">
            <summary>
            The album field.
            </summary>
        </member>
        <member name="P:FluentSpotifyApi.Builder.Search.QueryFields.Artist">
            <summary>
            The artist field.
            </summary>
        </member>
        <member name="P:FluentSpotifyApi.Builder.Search.QueryFields.Track">
            <summary>
            The track field.
            </summary>
        </member>
        <member name="P:FluentSpotifyApi.Builder.Search.QueryFields.Year">
            <summary>
            The year field.
            </summary>
        </member>
        <member name="P:FluentSpotifyApi.Builder.Search.QueryFields.Tag">
            <summary>
            The tag field.
            </summary>
        </member>
        <member name="P:FluentSpotifyApi.Builder.Search.QueryFields.Genre">
            <summary>
            The genre field.
            </summary>
        </member>
        <member name="P:FluentSpotifyApi.Builder.Search.QueryFields.Upc">
            <summary>
            The UPC field.
            </summary>
        </member>
        <member name="P:FluentSpotifyApi.Builder.Search.QueryFields.Isrc">
            <summary>
            The ISRC field.
            </summary>
        </member>
        <member name="T:FluentSpotifyApi.Builder.Search.Tag">
            <summary>
            The search tag.
            </summary>
        </member>
        <member name="F:FluentSpotifyApi.Builder.Search.Tag.New">
            <summary>
            Represents albums released in last two weeks.
            </summary>
        </member>
        <member name="F:FluentSpotifyApi.Builder.Search.Tag.Hipster">
            <summary>
            Represents albums with the lowest 10% popularity.
            </summary>
        </member>
        <member name="T:FluentSpotifyApi.Builder.Shows.IShowBuilder">
            <summary>
            The builder for "shows/{id}" endpoint.
            </summary>
        </member>
        <member name="P:FluentSpotifyApi.Builder.Shows.IShowBuilder.Episodes">
            <summary>
            Gets builder for "shows/{id}/episodes" endpoint.
            </summary>
        </member>
        <member name="M:FluentSpotifyApi.Builder.Shows.IShowBuilder.GetAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Gets Spotify catalog information for a single show identified by its unique Spotify ID.
            </summary>
            <param name="market">
            An ISO 3166-1 alpha-2 country code. If a country code is specified, only shows and episodes that are available in that market will be returned.
            If a valid user access token is specified in the request header, the country associated with the user account will take priority over this parameter.
            </param>
            <param name="cancellationToken">The cancellation token.</param>
        </member>
        <member name="T:FluentSpotifyApi.Builder.Shows.IShowEpisodesBuilder">
            <summary>
            The builder for "shows/{id}/episodes" endpoint.
            </summary>
        </member>
        <member name="M:FluentSpotifyApi.Builder.Shows.IShowEpisodesBuilder.GetAsync(System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Get Spotify catalog information about an show’s episodes. Optional parameters can be used to limit the number of episodes returned.
            </summary>
            <param name="market">
            An ISO 3166-1 alpha-2 country code. If a country code is specified, only shows and episodes that are available in that market will be returned.
            If a valid user access token is specified in the request header, the country associated with the user account will take priority over this parameter.
            </param>
            <param name="limit">The maximum number of episodes to return. Default: 20. Minimum: 1. Maximum: 50.</param>
            <param name="offset">The index of the first episode to return. Default: 0 (the first object). Use with <paramref name="limit"/> to get the next set of episodes.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns></returns>
        </member>
        <member name="T:FluentSpotifyApi.Builder.Shows.IShowsBuilder">
            <summary>
            The builder for "shows?ids={ids}" endpoint.
            </summary>
        </member>
        <member name="M:FluentSpotifyApi.Builder.Shows.IShowsBuilder.GetAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Gets Spotify catalog information for several shows based on their Spotify IDs.
            </summary>
            <param name="market">
            An ISO 3166-1 alpha-2 country code. If a country code is specified, only shows and episodes that are available in that market will be returned.
            If a valid user access token is specified in the request header, the country associated with the user account will take priority over this parameter.
            </param>
            <param name="cancellationToken">The cancellation token.</param>
        </member>
        <member name="T:FluentSpotifyApi.Builder.SpotifyUri">
            <summary>
            Provides Spotify URI for specified entity.
            </summary>
        </member>
        <member name="M:FluentSpotifyApi.Builder.SpotifyUri.OfArtist(System.String)">
            <summary>
            Gets Spotify URI of artist from ID.
            </summary>
            <param name="artistId">The artist ID.</param>
        </member>
        <member name="M:FluentSpotifyApi.Builder.SpotifyUri.OfAlbum(System.String)">
            <summary>
            Gets Spotify URI of album from ID.
            </summary>
            <param name="albumId">The album ID.</param>
        </member>
        <member name="M:FluentSpotifyApi.Builder.SpotifyUri.OfTrack(System.String)">
            <summary>
            Gets Spotify URI of track from ID.
            </summary>
            <param name="trackId">The track ID.</param>
        </member>
        <member name="M:FluentSpotifyApi.Builder.SpotifyUri.OfShow(System.String)">
            <summary>
            Gets Spotify URI of show from ID.
            </summary>
            <param name="showId">The show ID.</param>
        </member>
        <member name="M:FluentSpotifyApi.Builder.SpotifyUri.OfEpisode(System.String)">
            <summary>
            Gets Spotify URI of episode from ID.
            </summary>
            <param name="episodeId">The episode ID.</param>
        </member>
        <member name="M:FluentSpotifyApi.Builder.SpotifyUri.OfPlaylist(System.String)">
            <summary>
            Gets Spotify URI of playlist from ID.
            </summary>
            <param name="playlistId">The playlist ID.</param>
        </member>
        <member name="M:FluentSpotifyApi.Builder.SpotifyUri.OfUser(System.String)">
            <summary>
            Gets Spotify URI of user from ID.
            </summary>
            <param name="userId">The user ID.</param>
        </member>
        <member name="T:FluentSpotifyApi.Builder.Tracks.ITrackAudioAnalysisBuilder">
            <summary>
            The builder for "audio-analysis/{id}" endpoint.
            </summary>
        </member>
        <member name="M:FluentSpotifyApi.Builder.Tracks.ITrackAudioAnalysisBuilder.GetAsync(System.Threading.CancellationToken)">
            <summary>
            Gets a detailed audio analysis for a single track identified by its unique Spotify ID.
            </summary>
            <param name="cancellationToken">The cancellation token.</param>
            <returns></returns>
        </member>
        <member name="T:FluentSpotifyApi.Builder.Tracks.ITrackAudioFeaturesBuilder">
            <summary>
            The builder for "audio-features/{id}" endpoint.
            </summary>
        </member>
        <member name="M:FluentSpotifyApi.Builder.Tracks.ITrackAudioFeaturesBuilder.GetAsync(System.Threading.CancellationToken)">
            <summary>
            Gets audio feature information for a single track identified by its unique Spotify ID.
            </summary>
            <param name="cancellationToken">The cancellation token.</param>
            <returns></returns>
        </member>
        <member name="T:FluentSpotifyApi.Builder.Tracks.ITrackBuilder">
            <summary>
            The builder for "tracks/{id}" endpoint.
            </summary>
        </member>
        <member name="P:FluentSpotifyApi.Builder.Tracks.ITrackBuilder.AudioAnalysis">
            <summary>
            Gets builder for "audio-analysis/{id}" endpoint.
            </summary>
        </member>
        <member name="P:FluentSpotifyApi.Builder.Tracks.ITrackBuilder.AudioFeatures">
            <summary>
            Gets builder for "audio-features/{id}" endpoint.
            </summary>
        </member>
        <member name="M:FluentSpotifyApi.Builder.Tracks.ITrackBuilder.GetAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Gets Spotify catalog information for a single track identified by its unique Spotify ID.
            </summary>
            <param name="market">An ISO 3166-1 alpha-2 country code or the string <c>from_token</c>. Provide this parameter if you want to apply Track Relinking.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns></returns>
        </member>
        <member name="T:FluentSpotifyApi.Builder.Tracks.ITracksAudioFeaturesBuilder">
            <summary>
            The builder for "audio-features?ids={ids}" endpoint.
            </summary>
        </member>
        <member name="M:FluentSpotifyApi.Builder.Tracks.ITracksAudioFeaturesBuilder.GetAsync(System.Threading.CancellationToken)">
            <summary>
            Gets audio features for multiple tracks based on their Spotify IDs.
            </summary>
            <param name="cancellationToken">The cancellation token.</param>
            <returns></returns>
        </member>
        <member name="T:FluentSpotifyApi.Builder.Tracks.ITracksBuilder">
            <summary>
            The builder for "tracks?ids={ids}" endpoint.
            </summary>
        </member>
        <member name="P:FluentSpotifyApi.Builder.Tracks.ITracksBuilder.AudioFeatures">
            <summary>
            Gets builder for "audio-features?ids={ids}" endpoint.
            </summary>
        </member>
        <member name="M:FluentSpotifyApi.Builder.Tracks.ITracksBuilder.GetAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Gets Spotify catalog information for multiple tracks based on their Spotify IDs.
            </summary>
            <param name="market">An ISO 3166-1 alpha-2 country code or the string <c>from_token</c>. Provide this parameter if you want to apply Track Relinking.</param>
            <param name="cancellationToken">The cancellation token.</param>
        </member>
        <member name="T:FluentSpotifyApi.Builder.Users.IUserBuilder">
            <summary>
            The builder for "users/{id}" endpoint.
            </summary>
        </member>
        <member name="P:FluentSpotifyApi.Builder.Users.IUserBuilder.Playlists">
            <summary>
            Gets builder for "users/{id}/playlists" endpoint.
            </summary>
        </member>
        <member name="M:FluentSpotifyApi.Builder.Users.IUserBuilder.GetAsync(System.Threading.CancellationToken)">
            <summary>
            Gets public profile information about a Spotify user.
            </summary>
            <param name="cancellationToken">The cancellation token.</param>
            <returns></returns>
        </member>
        <member name="T:FluentSpotifyApi.Builder.Users.IUserPlaylistsBuilder">
            <summary>
            The builder for "users/{id}/playlists" endpoint.
            </summary>
        </member>
        <member name="M:FluentSpotifyApi.Builder.Users.IUserPlaylistsBuilder.GetAsync(System.Nullable{System.Int32},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Gets a list of the playlists owned or followed by a Spotify user.
            </summary>
            <param name="limit">The maximum number of playlists to return. Default: 20. Minimum: 1. Maximum: 50.</param>
            <param name="offset">
            The index of the first playlist to return. Default: 0 (the first object). Maximum offset: 100.000.
            Use with <paramref name="limit"/> to get the next set of playlists.
            </param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns></returns>
        </member>
        <member name="M:FluentSpotifyApi.Builder.Users.IUserPlaylistsBuilder.CreateAsync(FluentSpotifyApi.Model.Playlists.CreatePlaylistRequest,System.Threading.CancellationToken)">
            <summary>
            Creates a playlist for a Spotify user. (The playlist will be empty until you add tracks.)
            </summary>
            <param name="createPlaylistRequest">New playlist request.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns></returns>
        </member>
        <member name="T:FluentSpotifyApi.DependencyInjection.FluentSpotifyClientServiceCollectionExtensions">
            <summary>
            The extension methods for registering <see cref="T:FluentSpotifyApi.IFluentSpotifyClient"/> implementation in an <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection"/>.
            </summary>
        </member>
        <member name="M:FluentSpotifyApi.DependencyInjection.FluentSpotifyClientServiceCollectionExtensions.AddFluentSpotifyClient(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
            Adds <see cref="T:FluentSpotifyApi.IFluentSpotifyClient"/> implementation to the specified <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection" />.
            </summary>
            <param name="services">The <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection"/>.</param>
        </member>
        <member name="M:FluentSpotifyApi.DependencyInjection.FluentSpotifyClientServiceCollectionExtensions.AddFluentSpotifyClient(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Action{FluentSpotifyApi.FluentSpotifyClientOptions})">
            <summary>
            Adds <see cref="T:FluentSpotifyApi.IFluentSpotifyClient"/> implementation to the specified <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection" />.
            </summary>
            <param name="services">The <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection"/>.</param>
            <param name="configureOptions">Used to configure the <see cref="T:FluentSpotifyApi.FluentSpotifyClientOptions"/>.</param>
        </member>
        <member name="T:FluentSpotifyApi.DependencyInjection.IFluentSpotifyClientBuilder">
            <summary>
            A builder that can be used to configure <see cref="T:FluentSpotifyApi.IFluentSpotifyClient"/>.
            </summary>
        </member>
        <member name="M:FluentSpotifyApi.DependencyInjection.IFluentSpotifyClientBuilder.ConfigureHttpClientBuilder(System.Action{Microsoft.Extensions.DependencyInjection.IHttpClientBuilder})">
            <summary>
            Configures HTTP client builder for <see cref="T:FluentSpotifyApi.IFluentSpotifyClient"/> HTTP client.
            </summary>
            <param name="configureBuilder">Used to configure the <see cref="T:Microsoft.Extensions.DependencyInjection.IHttpClientBuilder"/>.</param>
            <returns></returns>
        </member>
        <member name="T:FluentSpotifyApi.Expressions.Fields.FieldsProvider">
            <summary>
            The fields provider.
            </summary>
        </member>
        <member name="M:FluentSpotifyApi.Expressions.Fields.FieldsProvider.Get``1(System.Action{FluentSpotifyApi.Expressions.Fields.IFieldsBuilder{``0}})">
            <summary>
            Gets fields from the specified fields builder action.
            </summary>
            <typeparam name="TInput">The type of the input.</typeparam>
            <param name="buildFields">The action for building fields.</param>
            <exception cref="T:System.ArgumentException">
            Thrown when an include or exclude expression is not valid.
            </exception>
        </member>
        <member name="T:FluentSpotifyApi.Expressions.Fields.IFieldsBuilder`1">
            <summary>
            The fields builder.
            </summary>
            <typeparam name="TInput">The type of the input.</typeparam>
        </member>
        <member name="M:FluentSpotifyApi.Expressions.Fields.IFieldsBuilder`1.Include``1(System.Linq.Expressions.Expression{System.Func{`0,``0}})">
            <summary>
            Includes the specified expression.
            </summary>
            <typeparam name="TResult">The type of the result.</typeparam>
            <param name="expression">
            The expression to be included.
            The indexer operator can be used to include array properties (e.g. <c>f => f.Items[0].Name</c>).
            The cast operator can be used to reference properties of derived class. (e.g. <c>f => ((Derived)(f.Entity)).Description</c>).
            </param>
            <exception cref="T:System.ArgumentNullException">
            Thrown when <paramref name="expression"/> is null.
            </exception>
        </member>
        <member name="M:FluentSpotifyApi.Expressions.Fields.IFieldsBuilder`1.Exclude``1(System.Linq.Expressions.Expression{System.Func{`0,``0}})">
            <summary>
            Excludes the specified expression.
            </summary>
            <typeparam name="TResult">The type of the result.</typeparam>
            <param name="expression">
            The expression to be excluded.
            The indexer operator can be used to exclude array properties (e.g. <c>f => f.Items[0].Name</c>).
            The cast operator can be used to reference properties of derived class. (e.g. <c>f => ((Derived)(f.Entity)).Description</c>).
            </param>
            <exception cref="T:System.ArgumentNullException">
            Thrown when <paramref name="expression"/> is null.
            </exception>
        </member>
        <member name="T:FluentSpotifyApi.Expressions.Query.QueryFieldAttribute">
            <summary>
            Indicates that the property or field is a query field.
            </summary>
        </member>
        <member name="M:FluentSpotifyApi.Expressions.Query.QueryFieldAttribute.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:FluentSpotifyApi.Expressions.Query.QueryFieldAttribute" /> class.
            </summary>
            <param name="name">The query field name.</param>
        </member>
        <member name="P:FluentSpotifyApi.Expressions.Query.QueryFieldAttribute.Name">
            <summary>
            The query field name.
            </summary>
        </member>
        <member name="T:FluentSpotifyApi.Expressions.Query.QueryOptions">
            <summary>
            The query options.
            </summary>
        </member>
        <member name="P:FluentSpotifyApi.Expressions.Query.QueryOptions.RemoveSpecialCharacters">
            <summary>
            If set to <c>true</c>, removes ["] characters from exact match and [":] characters from partial match.
            Set to <c>false</c> by default.
            </summary>
        </member>
        <member name="P:FluentSpotifyApi.Expressions.Query.QueryOptions.NormalizePartialMatch">
            <summary>
            If set to <c>true</c>, converts OR and NOT words to lowercase and distributes field name and NOT operator
            in partial match. (e.g. <c>f => f.Artist.Contains("NOT") &amp;&amp; !f.Artist.Contains("nice so*")</c>
            will be converted into "artist:not NOT artist:nice NOT artist:so*")
            Set to <c>false</c> by default.
            </summary>
        </member>
        <member name="T:FluentSpotifyApi.Expressions.Query.QueryProvider">
            <summary>
            The query provider.
            </summary>
        </member>
        <member name="M:FluentSpotifyApi.Expressions.Query.QueryProvider.Get``1(System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})">
            <summary>
            Gets query from the specified predicate expression.
            </summary>
            <typeparam name="TInput">The type of the input.</typeparam>
            <param name="predicate">The predicate expression.</param>
            <exception cref="T:System.ArgumentNullException">
            Thrown when <paramref name="predicate"/> is null.
            </exception>
            <exception cref="T:System.ArgumentException">
            Thrown when <paramref name="predicate"/> is not valid.
            </exception>
        </member>
        <member name="M:FluentSpotifyApi.Expressions.Query.QueryProvider.Get``1(System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},FluentSpotifyApi.Expressions.Query.QueryOptions)">
            <summary>
            Gets query from the specified predicate expression.
            </summary>
            <typeparam name="TInput">The type of the input.</typeparam>
            <param name="predicate">The predicate expression.</param>
            <param name="queryOptions">The query options.</param>
            <exception cref="T:System.ArgumentNullException">
            Thrown when <paramref name="predicate"/> or <paramref name="queryOptions"/> is null.
            </exception>
            <exception cref="T:System.ArgumentException">
            Thrown when <paramref name="predicate"/> is not valid.
            </exception>
        </member>
        <member name="T:FluentSpotifyApi.FluentSpotifyClientDefaults">
            <summary>
             The default values for <see cref="T:FluentSpotifyApi.IFluentSpotifyClient"/>.
            </summary>
        </member>
        <member name="F:FluentSpotifyApi.FluentSpotifyClientDefaults.WebApiEndpoint">
            <summary>
            The URI of Spotify Web API endpoint for obtaining user information.
            </summary>
        </member>
        <member name="T:FluentSpotifyApi.FluentSpotifyClientOptions">
            <summary>
            The options for <see cref="T:FluentSpotifyApi.IFluentSpotifyClient"/>.
            </summary>
        </member>
        <member name="P:FluentSpotifyApi.FluentSpotifyClientOptions.WebApiEndpoint">
            <summary>
            Gets or sets the URI of Spotify Web API. Defaults to https://api.spotify.com/v1/.
            </summary>
        </member>
        <member name="M:FluentSpotifyApi.FluentSpotifyClientOptions.Validate">
            <summary>
            Performs validation.
            </summary>
        </member>
        <member name="T:FluentSpotifyApi.IFluentSpotifyClient">
            <summary>
            The Fluent Spotify Client.
            </summary>
        </member>
        <member name="M:FluentSpotifyApi.IFluentSpotifyClient.Artists(System.String)">
            <summary>
            Gets builder for "artists/{id}" endpoint.
            </summary>
            <param name="id">The artist ID.</param>
        </member>
        <member name="M:FluentSpotifyApi.IFluentSpotifyClient.Artists(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Gets builder for "artists?ids={ids}" endpoint.
            </summary>
            <param name="ids">
            The artist IDs. Maximum: 50.</param>
        </member>
        <member name="M:FluentSpotifyApi.IFluentSpotifyClient.Albums(System.String)">
            <summary>
            Gets builder for "albums/{id}" endpoint.
            </summary>
            <param name="id">The album ID.</param>
        </member>
        <member name="M:FluentSpotifyApi.IFluentSpotifyClient.Albums(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Gets builder for "albums?ids={ids}" endpoint.
            </summary>
            <param name="ids">The album IDs. Maximum: 20.</param>
        </member>
        <member name="M:FluentSpotifyApi.IFluentSpotifyClient.Tracks(System.String)">
            <summary>
            Gets builder for "tracks/{id}" endpoint.
            </summary>
            <param name="id">The track ID.</param>
        </member>
        <member name="M:FluentSpotifyApi.IFluentSpotifyClient.Tracks(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Gets builder for "tracks?ids={ids}" endpoint.
            </summary>
            <param name="ids">
            The track IDs
            Maximum: 50, for <see cref="M:FluentSpotifyApi.Builder.Tracks.ITracksBuilder.GetAsync(System.String,System.Threading.CancellationToken)"/>.
            Maximum: 100, for <see cref="M:FluentSpotifyApi.Builder.Tracks.ITracksAudioFeaturesBuilder.GetAsync(System.Threading.CancellationToken)"/>.
            </param>
        </member>
        <member name="M:FluentSpotifyApi.IFluentSpotifyClient.Shows(System.String)">
            <summary>
            Gets builder for "shows/{id}" endpoint.
            </summary>
            <param name="id">The show ID.</param>
        </member>
        <member name="M:FluentSpotifyApi.IFluentSpotifyClient.Shows(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Gets builder for "shows?ids={ids}" endpoint.
            </summary>
            <param name="ids">
            The show IDs. Maximum: 50.
            </param>
        </member>
        <member name="M:FluentSpotifyApi.IFluentSpotifyClient.Episodes(System.String)">
            <summary>
            Gets builder for "episodes/{id}" endpoint.
            </summary>
            <param name="id">The episode ID.</param>
            <returns></returns>
        </member>
        <member name="M:FluentSpotifyApi.IFluentSpotifyClient.Episodes(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Gets builder for "episodes?ids={ids}" endpoint.
            </summary>
            <param name="ids">The episodes IDs. Maximum: 50.</param>
            <returns></returns>
        </member>
        <member name="M:FluentSpotifyApi.IFluentSpotifyClient.Playlists(System.String)">
            <summary>
            Gets builder for "playlists/{id}" endpoint.
            </summary>
            <param name="id">The playlist ID.</param>
        </member>
        <member name="P:FluentSpotifyApi.IFluentSpotifyClient.Browse">
            <summary>
            Gets builder for "browse" endpoints that are used for getting playlists and new album releases
            featured on Spotify’s Browse tab.
            </summary>
        </member>
        <member name="P:FluentSpotifyApi.IFluentSpotifyClient.Search">
            <summary>
            Gets builder for "search" endpoint.
            </summary>
        </member>
        <member name="P:FluentSpotifyApi.IFluentSpotifyClient.Me">
            <summary>
            Gets builder for "me" and "users/{myUserId}/playlists" endpoints.
            </summary>
        </member>
        <member name="M:FluentSpotifyApi.IFluentSpotifyClient.Users(System.String)">
            <summary>
            Gets builder for "users/{id}" endpoint.
            </summary>
            <param name="id">The user ID.</param>
        </member>
        <member name="M:FluentSpotifyApi.IFluentSpotifyClient.GetAsync``1(System.Uri,System.Threading.CancellationToken)">
            <summary>
            Gets the instance of <typeparamref name="T"/> from the <paramref name="url"/>.
            This method can be used for looping through the paged result where the URL of the next page can be accessed from the <see cref="P:FluentSpotifyApi.Model.Page`1.Next"/> property.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="url">The URL.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns></returns>
        </member>
        <member name="T:FluentSpotifyApi.IFluentSpotifyHttpClientFactory">
            <summary>
            The HTTP Client factory for <see cref="T:FluentSpotifyApi.IFluentSpotifyClient"/>.
            </summary>
        </member>
        <member name="M:FluentSpotifyApi.IFluentSpotifyHttpClientFactory.CreateClient">
            <summary>
            Creates HTTP Client for <see cref="T:FluentSpotifyApi.IFluentSpotifyClient"/>.
            </summary>
            <returns></returns>
        </member>
        <member name="T:FluentSpotifyApi.Model.Albums.Album">
            <summary>
            The album.
            </summary>
            <seealso cref="T:FluentSpotifyApi.Model.Albums.AlbumBase" />
        </member>
        <member name="P:FluentSpotifyApi.Model.Albums.Album.Copyrights">
            <summary>
            The copyright statements of the album.
            </summary>
        </member>
        <member name="P:FluentSpotifyApi.Model.Albums.Album.ExternalIds">
            <summary>
            Known external IDs for the album.
            </summary>
        </member>
        <member name="P:FluentSpotifyApi.Model.Albums.Album.Genres">
            <summary>
            A list of the genres used to classify the album. For example: “Prog Rock” , “Post-Grunge”. (If not yet classified, the array is empty.)
            </summary>
        </member>
        <member name="P:FluentSpotifyApi.Model.Albums.Album.Label">
            <summary>
            The label for the album.
            </summary>
        </member>
        <member name="P:FluentSpotifyApi.Model.Albums.Album.Popularity">
            <summary>
            The popularity of the album. The value will be between 0 and 100, with 100 being the most popular.
            The popularity is calculated from the popularity of the album’s individual tracks.
            </summary>
        </member>
        <member name="P:FluentSpotifyApi.Model.Albums.Album.Tracks">
            <summary>
            The tracks of the album.
            </summary>
        </member>
        <member name="T:FluentSpotifyApi.Model.Albums.AlbumBase">
            <summary>
            The base class for albums.
            </summary>
            <seealso cref="T:FluentSpotifyApi.Core.Model.EntityBase" />
        </member>
        <member name="P:FluentSpotifyApi.Model.Albums.AlbumBase.AlbumType">
            <summary>
            The type of the album: <c>album</c>, <c>single</c>, or <c>compilation</c>.
            </summary>
        </member>
        <member name="P:FluentSpotifyApi.Model.Albums.AlbumBase.Artists">
            <summary>
            The artists of the album. Each artist object includes a link in <see cref="P:FluentSpotifyApi.Core.Model.EntityBase.Href"/> to more detailed information about the artist.
            </summary>
        </member>
        <member name="P:FluentSpotifyApi.Model.Albums.AlbumBase.AvailableMarkets">
            <summary>
            The markets in which the album is available: ISO 3166-1 alpha-2 country codes.
            Note that an album is considered available in a market when at least 1 of its tracks is available in that market.
            </summary>
        </member>
        <member name="P:FluentSpotifyApi.Model.Albums.AlbumBase.Images">
            <summary>
            The cover art for the album in various sizes, widest first.
            </summary>
        </member>
        <member name="P:FluentSpotifyApi.Model.Albums.AlbumBase.Name">
            <summary>
            The name of the album. In case of an album take down, the value may be an empty string.
            </summary>
        </member>
        <member name="P:FluentSpotifyApi.Model.Albums.AlbumBase.ReleaseDate">
            <summary>
            The date the album was first released, for example 1981.
            Depending on the precision, it might be shown as 1981-12 or 1981-12-15.
            </summary>
        </member>
        <member name="P:FluentSpotifyApi.Model.Albums.AlbumBase.ReleaseDatePrecision">
            <summary>
            The precision with which release_date value is known: year, month, or day.
            </summary>
        </member>
        <member name="P:FluentSpotifyApi.Model.Albums.AlbumBase.Restrictions">
            <summary>
            Included in the response when a content restriction is applied.
            </summary>
        </member>
        <member name="T:FluentSpotifyApi.Model.Albums.AlbumsResponse">
            <summary>
            The albums response.
            </summary>
        </member>
        <member name="P:FluentSpotifyApi.Model.Albums.AlbumsResponse.Items">
            <summary>
            The albums.
            </summary>
        </member>
        <member name="T:FluentSpotifyApi.Model.Albums.SimplifiedAlbum">
            <summary>
            The simplified album.
            </summary>
            <seealso cref="T:FluentSpotifyApi.Model.Albums.AlbumBase" />
        </member>
        <member name="P:FluentSpotifyApi.Model.Albums.SimplifiedAlbum.AlbumGroup">
            <summary>
            The field is present when getting an artist’s albums. Possible values are “album”, “single”, “compilation”, “appears_on”.
            Compare to album_type this field represents relationship between the artist and the album.
            </summary>
        </member>
        <member name="T:FluentSpotifyApi.Model.Albums.SimplifiedAlbumsPageResponse">
            <summary>
            The simplified albums page response.
            </summary>
        </member>
        <member name="P:FluentSpotifyApi.Model.Albums.SimplifiedAlbumsPageResponse.Page">
            <summary>
            The simplified albums page.
            </summary>
        </member>
        <member name="T:FluentSpotifyApi.Model.Artists.Artist">
            <summary>
            The artist.
            </summary>
            <seealso cref="T:FluentSpotifyApi.Model.Artists.ArtistBase" />
        </member>
        <member name="P:FluentSpotifyApi.Model.Artists.Artist.Followers">
            <summary>
            Information about the followers of the artist.
            </summary>
        </member>
        <member name="P:FluentSpotifyApi.Model.Artists.Artist.Genres">
            <summary>
            A list of the genres the artist is associated with. For example: <c>"Prog Rock"</c>, <c>"Post-Grunge"</c>. (If not yet classified, the array is empty.)
            </summary>
        </member>
        <member name="P:FluentSpotifyApi.Model.Artists.Artist.Images">
            <summary>
            Images of the artist in various sizes, widest first.
            </summary>
        </member>
        <member name="P:FluentSpotifyApi.Model.Artists.Artist.Popularity">
            <summary>
            The popularity of the artist. The value will be between 0 and 100, with 100 being the most popular.
            The artist’s popularity is calculated from the popularity of all the artist’s tracks.
            </summary>
        </member>
        <member name="T:FluentSpotifyApi.Model.Artists.ArtistBase">
            <summary>
            The base class for artists.
            </summary>
            <seealso cref="T:FluentSpotifyApi.Core.Model.EntityBase" />
        </member>
        <member name="P:FluentSpotifyApi.Model.Artists.ArtistBase.Name">
            <summary>
            The name of the artist.
            </summary>
        </member>
        <member name="T:FluentSpotifyApi.Model.Artists.ArtistsPageResponse">
            <summary>
            The artists page response.
            </summary>
        </member>
        <member name="P:FluentSpotifyApi.Model.Artists.ArtistsPageResponse.Page">
            <summary>
            The artists page.
            </summary>
        </member>
        <member name="T:FluentSpotifyApi.Model.Artists.ArtistsResponse">
            <summary>
            The artists response.
            </summary>
        </member>
        <member name="P:FluentSpotifyApi.Model.Artists.ArtistsResponse.Items">
            <summary>
            The artists.
            </summary>
        </member>
        <member name="T:FluentSpotifyApi.Model.Artists.SimplifiedArtist">
            <summary>
            The simplified artist.
            </summary>
            <seealso cref="T:FluentSpotifyApi.Model.Artists.ArtistBase" />
        </member>
        <member name="T:FluentSpotifyApi.Model.Audio.AudioAnalysis">
            <summary>
            The audio analysis.
            </summary>
        </member>
        <member name="P:FluentSpotifyApi.Model.Audio.AudioAnalysis.Meta">
            <summary>
            The meta.
            </summary>
        </member>
        <member name="P:FluentSpotifyApi.Model.Audio.AudioAnalysis.Track">
            <summary>
            The audio track.
            </summary>
        </member>
        <member name="P:FluentSpotifyApi.Model.Audio.AudioAnalysis.Bars">
            <summary>
            The bars.
            </summary>
        </member>
        <member name="P:FluentSpotifyApi.Model.Audio.AudioAnalysis.Beats">
            <summary>
            The beats.
            </summary>
        </member>
        <member name="P:FluentSpotifyApi.Model.Audio.AudioAnalysis.Tatums">
            <summary>
            The tatums.
            </summary>
        </member>
        <member name="P:FluentSpotifyApi.Model.Audio.AudioAnalysis.Sections">
            <summary>
            The sections.
            </summary>
        </member>
        <member name="P:FluentSpotifyApi.Model.Audio.AudioAnalysis.Segments">
            <summary>
            The segments.
            </summary>
        </member>
        <member name="T:FluentSpotifyApi.Model.Audio.AudioFeatures">
            <summary>
            The audio features.
            </summary>
        </member>
        <member name="P:FluentSpotifyApi.Model.Audio.AudioFeatures.Acousticness">
            <summary>
            A confidence measure from 0.0 to 1.0 of whether the track is acoustic.
            1.0 represents high confidence the track is acoustic.
            </summary>
        </member>
        <member name="P:FluentSpotifyApi.Model.Audio.AudioFeatures.AnalysisUrl">
            <summary>
            An HTTP URL to access the full audio analysis of this track.
            An access token is required to access this data.
            </summary>
        </member>
        <member name="P:FluentSpotifyApi.Model.Audio.AudioFeatures.Danceability">
            <summary>
            Danceability describes how suitable a track is for dancing based on a combination of musical elements including tempo, rhythm stability, beat strength, and overall regularity.
            A value of 0.0 is least danceable and 1.0 is most danceable.
            </summary>
        </member>
        <member name="P:FluentSpotifyApi.Model.Audio.AudioFeatures.Duration">
            <summary>
            The duration of the track.
            </summary>
        </member>
        <member name="P:FluentSpotifyApi.Model.Audio.AudioFeatures.Energy">
            <summary>
            Energy is a measure from 0.0 to 1.0 and represents a perceptual measure of intensity and activity.
            Typically, energetic tracks feel fast, loud, and noisy. For example, death metal has high energy, while a Bach prelude scores low on the scale.
            Perceptual features contributing to this attribute include dynamic range, perceived loudness, timbre, onset rate, and general entropy.
            </summary>
        </member>
        <member name="P:FluentSpotifyApi.Model.Audio.AudioFeatures.Id">
            <summary>
            The Spotify ID for the track.
            </summary>
        </member>
        <member name="P:FluentSpotifyApi.Model.Audio.AudioFeatures.Instrumentalness">
            <summary>
            Predicts whether a track contains no vocals. “Ooh” and “aah” sounds are treated as instrumental in this context. Rap or spoken word tracks are clearly “vocal”.
            The closer the instrumentalness value is to 1.0, the greater likelihood the track contains no vocal content.
            Values above 0.5 are intended to represent instrumental tracks, but confidence is higher as the value approaches 1.0.
            </summary>
        </member>
        <member name="P:FluentSpotifyApi.Model.Audio.AudioFeatures.Key">
            <summary>
            The key the track is in. Integers map to pitches using standard Pitch Class notation. E.g. 0 = C, 1 = C♯/D♭, 2 = D, and so on.
            </summary>
        </member>
        <member name="P:FluentSpotifyApi.Model.Audio.AudioFeatures.Liveness">
            <summary>
            Detects the presence of an audience in the recording. Higher liveness values represent an increased probability that the track was performed live.
            A value above 0.8 provides strong likelihood that the track is live.
            </summary>
        </member>
        <member name="P:FluentSpotifyApi.Model.Audio.AudioFeatures.Loudness">
            <summary>
            The overall loudness of a track in decibels (dB). Loudness values are averaged across the entire track and are useful for comparing relative loudness of tracks.
            Loudness is the quality of a sound that is the primary psychological correlate of physical strength (amplitude).
            Values typical range between -60 and 0 db.
            </summary>
        </member>
        <member name="P:FluentSpotifyApi.Model.Audio.AudioFeatures.Mode">
            <summary>
            Mode indicates the modality (major or minor) of a track, the type of scale from which its melodic content is derived. Major is represented by 1 and minor is 0.
            </summary>
        </member>
        <member name="P:FluentSpotifyApi.Model.Audio.AudioFeatures.Speechiness">
            <summary>
            Speechiness detects the presence of spoken words in a track.
            The more exclusively speech-like the recording (e.g. talk show, audio book, poetry), the closer to 1.0 the attribute value.
            Values above 0.66 describe tracks that are probably made entirely of spoken words.
            Values between 0.33 and 0.66 describe tracks that may contain both music and speech, either in sections or layered, including such cases as rap music.
            Values below 0.33 most likely represent music and other non-speech-like tracks.
            </summary>
        </member>
        <member name="P:FluentSpotifyApi.Model.Audio.AudioFeatures.Tempo">
            <summary>
            The overall estimated tempo of a track in beats per minute (BPM).
            In musical terminology, tempo is the speed or pace of a given piece and derives directly from the average beat duration.
            </summary>
        </member>
        <member name="P:FluentSpotifyApi.Model.Audio.AudioFeatures.TimeSignature">
            <summary>
            An estimated overall time signature of a track. The time signature (meter) is a notational convention to specify how many beats are in each bar (or measure).
            </summary>
        </member>
        <member name="P:FluentSpotifyApi.Model.Audio.AudioFeatures.TrackHref">
            <summary>
            A link to the Web API endpoint providing full details of the track.
            </summary>
        </member>
        <member name="P:FluentSpotifyApi.Model.Audio.AudioFeatures.Type">
            <summary>
            The object type: “audio_features”.
            </summary>
        </member>
        <member name="P:FluentSpotifyApi.Model.Audio.AudioFeatures.Uri">
            <summary>
            The Spotify URI for the track.
            </summary>
        </member>
        <member name="P:FluentSpotifyApi.Model.Audio.AudioFeatures.Valence">
            <summary>
            A measure from 0.0 to 1.0 describing the musical positiveness conveyed by a track.
            Tracks with high valence sound more positive (e.g. happy, cheerful, euphoric), while tracks with low valence sound more negative (e.g. sad, depressed, angry).
            </summary>
        </member>
        <member name="T:FluentSpotifyApi.Model.Audio.AudioFeaturesListResponse">
            <summary>
            The audio features list response.
            </summary>
        </member>
        <member name="P:FluentSpotifyApi.Model.Audio.AudioFeaturesListResponse.Items">
            <summary>
            The audio features list.
            </summary>
        </member>
        <member name="T:FluentSpotifyApi.Model.Audio.AudioTrack">
            <summary>
            The audio track.
            </summary>
        </member>
        <member name="P:FluentSpotifyApi.Model.Audio.AudioTrack.NumSamples">
            <summary>
            The number samples.
            </summary>
        </member>
        <member name="P:FluentSpotifyApi.Model.Audio.AudioTrack.Duration">
            <summary>
            The duration.
            </summary>
        </member>
        <member name="P:FluentSpotifyApi.Model.Audio.AudioTrack.SampleMd5">
            <summary>
            The sample MD5.
            </summary>
        </member>
        <member name="P:FluentSpotifyApi.Model.Audio.AudioTrack.OffsetSeconds">
            <summary>
            The offset seconds.
            </summary>
        </member>
        <member name="P:FluentSpotifyApi.Model.Audio.AudioTrack.WindowSeconds">
            <summary>
            The window seconds.
            </summary>
        </member>
        <member name="P:FluentSpotifyApi.Model.Audio.AudioTrack.AnalysisSampleRate">
            <summary>
            The analysis sample rate.
            </summary>
        </member>
        <member name="P:FluentSpotifyApi.Model.Audio.AudioTrack.AnalysisChannels">
            <summary>
            The analysis channels.
            </summary>
        </member>
        <member name="P:FluentSpotifyApi.Model.Audio.AudioTrack.EndOfFadeIn">
            <summary>
            The end of fade in.
            </summary>
        </member>
        <member name="P:FluentSpotifyApi.Model.Audio.AudioTrack.StartOfFadeOut">
            <summary>
            The start of fade out.
            </summary>
        </member>
        <member name="P:FluentSpotifyApi.Model.Audio.AudioTrack.Loudness">
            <summary>
            The loudness.
            </summary>
        </member>
        <member name="P:FluentSpotifyApi.Model.Audio.AudioTrack.Tempo">
            <summary>
            The tempo.
            </summary>
        </member>
        <member name="P:FluentSpotifyApi.Model.Audio.AudioTrack.TempoConfidence">
            <summary>
            The tempo confidence.
            </summary>
        </member>
        <member name="P:FluentSpotifyApi.Model.Audio.AudioTrack.TimeSignature">
            <summary>
            The time signature.
            </summary>
        </member>
        <member name="P:FluentSpotifyApi.Model.Audio.AudioTrack.TimeSignatureConfidence">
            <summary>
            The time signature confidence.
            </summary>
        </member>
        <member name="P:FluentSpotifyApi.Model.Audio.AudioTrack.Key">
            <summary>
            The key.
            </summary>
        </member>
        <member name="P:FluentSpotifyApi.Model.Audio.AudioTrack.KeyConfidence">
            <summary>
            The key confidence.
            </summary>
        </member>
        <member name="P:FluentSpotifyApi.Model.Audio.AudioTrack.Mode">
            <summary>
            The mode.
            </summary>
        </member>
        <member name="P:FluentSpotifyApi.Model.Audio.AudioTrack.ModeConfidence">
            <summary>
            The mode confidence.
            </summary>
        </member>
        <member name="P:FluentSpotifyApi.Model.Audio.AudioTrack.CodeString">
            <summary>
            The code string.
            </summary>
        </member>
        <member name="P:FluentSpotifyApi.Model.Audio.AudioTrack.CodeVersion">
            <summary>
            The code version.
            </summary>
        </member>
        <member name="P:FluentSpotifyApi.Model.Audio.AudioTrack.EchoPrintString">
            <summary>
            The echo print string.
            </summary>
        </member>
        <member name="P:FluentSpotifyApi.Model.Audio.AudioTrack.EchoPrintVersion">
            <summary>
            The echo print version.
            </summary>
        </member>
        <member name="P:FluentSpotifyApi.Model.Audio.AudioTrack.SynchString">
            <summary>
            The synch string.
            </summary>
        </member>
        <member name="P:FluentSpotifyApi.Model.Audio.AudioTrack.SynchVersion">
            <summary>
            The synch version.
            </summary>
        </member>
        <member name="P:FluentSpotifyApi.Model.Audio.AudioTrack.RhythmString">
            <summary>
            The rhythm string.
            </summary>
        </member>
        <member name="P:FluentSpotifyApi.Model.Audio.AudioTrack.RhythmVersion">
            <summary>
            The rhythm version.
            </summary>
        </member>
        <member name="T:FluentSpotifyApi.Model.Audio.Meta">
            <summary>
            The meta.
            </summary>
        </member>
        <member name="P:FluentSpotifyApi.Model.Audio.Meta.AnalyzerVersion">
            <summary>
            The analyzer version.
            </summary>
        </member>
        <member name="P:FluentSpotifyApi.Model.Audio.Meta.Platform">
            <summary>
            The platform.
            </summary>
        </member>
        <member name="P:FluentSpotifyApi.Model.Audio.Meta.DetailedStatus">
            <summary>
            The detailed status.
            </summary>
        </member>
        <member name="P:FluentSpotifyApi.Model.Audio.Meta.StatusCode">
            <summary>
            The status code.
            </summary>
        </member>
        <member name="P:FluentSpotifyApi.Model.Audio.Meta.Timestamp">
            <summary>
            The timestamp.
            </summary>
        </member>
        <member name="P:FluentSpotifyApi.Model.Audio.Meta.AnalysisTime">
            <summary>
            The analysis time.
            </summary>
        </member>
        <member name="P:FluentSpotifyApi.Model.Audio.Meta.InputProcess">
            <summary>
            The input process.
            </summary>
        </member>
        <member name="T:FluentSpotifyApi.Model.Audio.Section">
            <summary>
            The section.
            </summary>
        </member>
        <member name="P:FluentSpotifyApi.Model.Audio.Section.Start">
            <summary>
            The start.
            </summary>
        </member>
        <member name="P:FluentSpotifyApi.Model.Audio.Section.Duration">
            <summary>
            The duration.
            </summary>
        </member>
        <member name="P:FluentSpotifyApi.Model.Audio.Section.Confidence">
            <summary>
            The confidence.
            </summary>
        </member>
        <member name="P:FluentSpotifyApi.Model.Audio.Section.Loudness">
            <summary>
            The loudness.
            </summary>
        </member>
        <member name="P:FluentSpotifyApi.Model.Audio.Section.Tempo">
            <summary>
            The tempo.
            </summary>
        </member>
        <member name="P:FluentSpotifyApi.Model.Audio.Section.TempoConfidence">
            <summary>
            The tempo confidence.
            </summary>
        </member>
        <member name="P:FluentSpotifyApi.Model.Audio.Section.Key">
            <summary>
            The key.
            </summary>
        </member>
        <member name="P:FluentSpotifyApi.Model.Audio.Section.KeyConfidence">
            <summary>
            The key confidence.
            </summary>
        </member>
        <member name="P:FluentSpotifyApi.Model.Audio.Section.Mode">
            <summary>
            The mode.
            </summary>
        </member>
        <member name="P:FluentSpotifyApi.Model.Audio.Section.ModeConfidence">
            <summary>
            The mode confidence.
            </summary>
        </member>
        <member name="P:FluentSpotifyApi.Model.Audio.Section.TimeSignature">
            <summary>
            The time signature.
            </summary>
        </member>
        <member name="P:FluentSpotifyApi.Model.Audio.Section.TimeSignatureConfidence">
            <summary>
            The time signature confidence.
            </summary>
        </member>
        <member name="T:FluentSpotifyApi.Model.Audio.Segment">
            <summary>
            The segment.
            </summary>
        </member>
        <member name="P:FluentSpotifyApi.Model.Audio.Segment.Start">
            <summary>
            The start.
            </summary>
        </member>
        <member name="P:FluentSpotifyApi.Model.Audio.Segment.Duration">
            <summary>
            The duration.
            </summary>
        </member>
        <member name="P:FluentSpotifyApi.Model.Audio.Segment.Confidence">
            <summary>
            The confidence.
            </summary>
        </member>
        <member name="P:FluentSpotifyApi.Model.Audio.Segment.LoudnessStart">
            <summary>
            The loudness start.
            </summary>
        </member>
        <member name="P:FluentSpotifyApi.Model.Audio.Segment.LoudnessMaxTime">
            <summary>
            The loudness maximum time.
            </summary>
        </member>
        <member name="P:FluentSpotifyApi.Model.Audio.Segment.LoudnessMax">
            <summary>
            The loudness maximum.
            </summary>
        </member>
        <member name="P:FluentSpotifyApi.Model.Audio.Segment.Pitches">
            <summary>
            The pitches.
            </summary>
        </member>
        <member name="P:FluentSpotifyApi.Model.Audio.Segment.Timbre">
            <summary>
            The timbre.
            </summary>
        </member>
        <member name="P:FluentSpotifyApi.Model.Audio.Segment.LoudnessEnd">
            <summary>
            The loudness end.
            </summary>
        </member>
        <member name="T:FluentSpotifyApi.Model.Audio.TimeInterval">
            <summary>
            The time interval.
            </summary>
        </member>
        <member name="P:FluentSpotifyApi.Model.Audio.TimeInterval.Start">
            <summary>
            The start.
            </summary>
        </member>
        <member name="P:FluentSpotifyApi.Model.Audio.TimeInterval.Duration">
            <summary>
            The duration.
            </summary>
        </member>
        <member name="P:FluentSpotifyApi.Model.Audio.TimeInterval.Confidence">
            <summary>
            The confidence.
            </summary>
        </member>
        <member name="T:FluentSpotifyApi.Model.Browse.CategoriesPageResponse">
            <summary>
            The categories page response.
            </summary>
        </member>
        <member name="P:FluentSpotifyApi.Model.Browse.CategoriesPageResponse.Page">
            <summary>
            The categories page.
            </summary>
        </member>
        <member name="T:FluentSpotifyApi.Model.Browse.Category">
            <summary>
            The category.
            </summary>
        </member>
        <member name="P:FluentSpotifyApi.Model.Browse.Category.Href">
            <summary>
            A link to the Web API endpoint returning full details of the category.
            </summary>
        </member>
        <member name="P:FluentSpotifyApi.Model.Browse.Category.Icons">
            <summary>
            The category icon, in various sizes.
            </summary>
        </member>
        <member name="P:FluentSpotifyApi.Model.Browse.Category.Id">
            <summary>
            The Spotify category ID of the category.
            </summary>
        </member>
        <member name="P:FluentSpotifyApi.Model.Browse.Category.Name">
            <summary>
            The name of the category.
            </summary>
        </member>
        <member name="T:FluentSpotifyApi.Model.Browse.FeaturedPlaylists">
            <summary>
            The featured playlists.
            </summary>
        </member>
        <member name="P:FluentSpotifyApi.Model.Browse.FeaturedPlaylists.Message">
            <summary>
            The message.
            </summary>
        </member>
        <member name="P:FluentSpotifyApi.Model.Browse.FeaturedPlaylists.Playlists">
            <summary>
            The playlists page.
            </summary>
        </member>
        <member name="T:FluentSpotifyApi.Model.Browse.NewReleases">
            <summary>
            The new releases.
            </summary>
        </member>
        <member name="P:FluentSpotifyApi.Model.Browse.NewReleases.Message">
            <summary>
            The message.
            </summary>
        </member>
        <member name="P:FluentSpotifyApi.Model.Browse.NewReleases.Albums">
            <summary>
            The albums page.
            </summary>
        </member>
        <member name="T:FluentSpotifyApi.Model.Browse.Recommendations">
            <summary>
            The recommendations.
            </summary>
        </member>
        <member name="P:FluentSpotifyApi.Model.Browse.Recommendations.Seeds">
            <summary>
            An array of recommendation seed objects.
            </summary>
        </member>
        <member name="P:FluentSpotifyApi.Model.Browse.Recommendations.Tracks">
            <summary>
            An array of simplified track objects ordered according to the parameters supplied.
            </summary>
        </member>
        <member name="T:FluentSpotifyApi.Model.Browse.RecommendationsSeed">
            <summary>
            The recommendations seed.
            </summary>
        </member>
        <member name="P:FluentSpotifyApi.Model.Browse.RecommendationsSeed.AfterFilteringSize">
            <summary>
            The number of tracks available after min_* and max_* filters have been applied.
            </summary>
        </member>
        <member name="P:FluentSpotifyApi.Model.Browse.RecommendationsSeed.AfterRelinkingSize">
            <summary>
            The number of tracks available after relinking for regional availability.
            </summary>
        </member>
        <member name="P:FluentSpotifyApi.Model.Browse.RecommendationsSeed.Href">
            <summary>
            A link to the full track or artist data for this seed. For tracks this will be a link to a track.
            For artists a link to an <see cref="T:FluentSpotifyApi.Model.Artists.Artist"/>.
            For genre seeds, this value will be <c>null</c>.
            </summary>
        </member>
        <member name="P:FluentSpotifyApi.Model.Browse.RecommendationsSeed.Id">
            <summary>
            The id used to select this seed. This will be the same as the string used in the <c>seed_artists</c>, <c>seed_tracks</c> or <c>seed_genres</c> parameter.
            </summary>
        </member>
        <member name="P:FluentSpotifyApi.Model.Browse.RecommendationsSeed.InitialPoolSize">
            <summary>
            The number of recommended tracks available for this seed.
            </summary>
        </member>
        <member name="P:FluentSpotifyApi.Model.Browse.RecommendationsSeed.Type">
            <summary>
            The entity type of this seed. One of <c>artist</c>, <c>track</c> or <c>genre</c>.
            </summary>
        </member>
        <member name="T:FluentSpotifyApi.Model.Copyright">
            <summary>
            The copyright.
            </summary>
        </member>
        <member name="P:FluentSpotifyApi.Model.Copyright.Text">
            <summary>
            The copyright text for this content.
            </summary>
        </member>
        <member name="P:FluentSpotifyApi.Model.Copyright.Type">
            <summary>
            The type of copyright: <c>C</c> = the copyright, <c>P</c> = the sound recording (performance) copyright.
            </summary>
        </member>
        <member name="T:FluentSpotifyApi.Model.Cursor">
            <summary>
            The cursor.
            </summary>
        </member>
        <member name="P:FluentSpotifyApi.Model.Cursor.After">
            <summary>
            The cursor to use as key to find the next page of items.
            </summary>
        </member>
        <member name="T:FluentSpotifyApi.Model.CursorBasedPage`1">
            <summary>
            The cursor based page.
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="P:FluentSpotifyApi.Model.CursorBasedPage`1.Cursors">
            <summary>
            The cursors used to find the next set of items.
            </summary>
        </member>
        <member name="P:FluentSpotifyApi.Model.CursorBasedPage`1.Href">
            <summary>
            A link to the Web API endpoint returning the full result of the request.
            </summary>
        </member>
        <member name="P:FluentSpotifyApi.Model.CursorBasedPage`1.Items">
            <summary>
            The requested data.
            </summary>
        </member>
        <member name="P:FluentSpotifyApi.Model.CursorBasedPage`1.Limit">
            <summary>
            The maximum number of items in the response (as set in the query or by default).
            </summary>
        </member>
        <member name="P:FluentSpotifyApi.Model.CursorBasedPage`1.Next">
            <summary>
            URL to the next page of items. (<c>null</c> if none).
            </summary>
        </member>
        <member name="P:FluentSpotifyApi.Model.CursorBasedPage`1.Total">
            <summary>
            The total number of items available to return.
            </summary>
        </member>
        <member name="T:FluentSpotifyApi.Model.Episodes.Episode">
            <summary>
            The episode.
            </summary>
            <seealso cref="T:FluentSpotifyApi.Model.Episodes.EpisodeBase"/>
        </member>
        <member name="P:FluentSpotifyApi.Model.Episodes.Episode.Show">
            <summary>
            The show on which the episode belongs.
            </summary>
        </member>
        <member name="T:FluentSpotifyApi.Model.Episodes.EpisodeBase">
            <summary>
            The base class for episodes.
            </summary>
            <seealso cref="T:FluentSpotifyApi.Core.Model.EntityBase" />
        </member>
        <member name="P:FluentSpotifyApi.Model.Episodes.EpisodeBase.AudioPreviewUrl">
            <summary>
            A URL to a 30 second preview (MP3 format) of the episode. <c>null</c> if not available.
            </summary>
        </member>
        <member name="P:FluentSpotifyApi.Model.Episodes.EpisodeBase.Description">
            <summary>
            A description of the episode.
            </summary>
        </member>
        <member name="P:FluentSpotifyApi.Model.Episodes.EpisodeBase.Duration">
            <summary>
            The episode length.
            </summary>
        </member>
        <member name="P:FluentSpotifyApi.Model.Episodes.EpisodeBase.IsExplicit">
            <summary>
            Whether or not the episode has explicit content (true = yes it does; false = no it does not OR unknown).
            </summary>
        </member>
        <member name="P:FluentSpotifyApi.Model.Episodes.EpisodeBase.Images">
            <summary>
            The cover art for the episode in various sizes, widest first.
            </summary>
        </member>
        <member name="P:FluentSpotifyApi.Model.Episodes.EpisodeBase.IsExternallyHosted">
            <summary>
            True if the episode is hosted outside of Spotify’s CDN.
            </summary>
        </member>
        <member name="P:FluentSpotifyApi.Model.Episodes.EpisodeBase.IsPlayable">
            <summary>
            True if the episode is playable in the given market. Otherwise false.
            </summary>
        </member>
        <member name="P:FluentSpotifyApi.Model.Episodes.EpisodeBase.Languages">
            <summary>
            A list of the languages used in the episode, identified by their ISO 639 code.
            </summary>
        </member>
        <member name="P:FluentSpotifyApi.Model.Episodes.EpisodeBase.Name">
            <summary>
            The name of the episode.
            </summary>
        </member>
        <member name="P:FluentSpotifyApi.Model.Episodes.EpisodeBase.ReleaseDate">
            <summary>
            The date the episode was first released, for example <c>"1981-12-15"</c>. Depending on the precision, it might be shown as <c>"1981"</c> or <c>"1981-12"</c>.
            </summary>
        </member>
        <member name="P:FluentSpotifyApi.Model.Episodes.EpisodeBase.ReleaseDatePrecision">
            <summary>
            The precision with which <see cref="P:FluentSpotifyApi.Model.Episodes.EpisodeBase.ReleaseDate"/> value is known: <c>"year"</c>, <c>"month"</c>, or <c>"day"</c>.
            </summary>
        </member>
        <member name="P:FluentSpotifyApi.Model.Episodes.EpisodeBase.ResumePoint">
            <summary>
            The user’s most recent position in the episode. Set if the supplied access token is a user token and has the scope <c>user-read-playback-position</c>.
            </summary>
        </member>
        <member name="T:FluentSpotifyApi.Model.Episodes.EpisodesResponse">
            <summary>
            The episodes response.
            </summary>
        </member>
        <member name="P:FluentSpotifyApi.Model.Episodes.EpisodesResponse.Items">
            <summary>
            The episodes.
            </summary>
        </member>
        <member name="T:FluentSpotifyApi.Model.Episodes.ResumePoint">
            <summary>
            The resume point.
            </summary>
        </member>
        <member name="P:FluentSpotifyApi.Model.Episodes.ResumePoint.FullyPlayed">
            <summary>
            Whether or not the episode has been fully played by the user.
            </summary>
        </member>
        <member name="P:FluentSpotifyApi.Model.Episodes.ResumePoint.ResumePositionMs">
            <summary>
            The user’s most recent position in the episode.
            </summary>
        </member>
        <member name="T:FluentSpotifyApi.Model.Episodes.SimplifiedEpisode">
            <summary>
            The simplified episode.
            </summary>
            <seealso cref="T:FluentSpotifyApi.Model.Episodes.EpisodeBase"/>
        </member>
        <member name="T:FluentSpotifyApi.Model.Episodes.SimplifiedEpisodesPageResponse">
            <summary>
            The simplified episodes page response.
            </summary>
        </member>
        <member name="P:FluentSpotifyApi.Model.Episodes.SimplifiedEpisodesPageResponse.Page">
            <summary>
            The simplified episodes page.
            </summary>
        </member>
        <member name="T:FluentSpotifyApi.Model.Following.FollowedArtists">
            <summary>
            The followed artists.
            </summary>
        </member>
        <member name="P:FluentSpotifyApi.Model.Following.FollowedArtists.Page">
            <summary>
            The followed artists page.
            </summary>
        </member>
        <member name="T:FluentSpotifyApi.Model.Library.SavedAlbum">
            <summary>
            The saved album.
            </summary>
        </member>
        <member name="P:FluentSpotifyApi.Model.Library.SavedAlbum.AddedAt">
            <summary>
            The UTC date and time the album was saved.
            </summary>
        </member>
        <member name="P:FluentSpotifyApi.Model.Library.SavedAlbum.Album">
            <summary>
            Information about the album.
            </summary>
        </member>
        <member name="T:FluentSpotifyApi.Model.Library.SavedShow">
            <summary>
            The saved show.
            </summary>
        </member>
        <member name="P:FluentSpotifyApi.Model.Library.SavedShow.AddedAt">
            <summary>
            The UTC date and time the show was saved.
            </summary>
        </member>
        <member name="P:FluentSpotifyApi.Model.Library.SavedShow.Show">
            <summary>
            Gets or sets the show.
            </summary>
            <value>
            The show.
            </value>
        </member>
        <member name="T:FluentSpotifyApi.Model.Library.SavedTrack">
            <summary>
            The saved track.
            </summary>
        </member>
        <member name="P:FluentSpotifyApi.Model.Library.SavedTrack.AddedAt">
            <summary>
            Gets or sets the added at.
            </summary>
            <value>
            The added at.
            </value>
        </member>
        <member name="P:FluentSpotifyApi.Model.Library.SavedTrack.Track">
            <summary>
            Gets or sets the track.
            </summary>
            <value>
            The track.
            </value>
        </member>
        <member name="T:FluentSpotifyApi.Model.Page`1">
            <summary>
            The page.
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="P:FluentSpotifyApi.Model.Page`1.Href">
            <summary>
            A link to the Web API endpoint returning the full result of the request.
            </summary>
        </member>
        <member name="P:FluentSpotifyApi.Model.Page`1.Items">
            <summary>
            The requested data.
            </summary>
        </member>
        <member name="P:FluentSpotifyApi.Model.Page`1.Limit">
            <summary>
            The maximum number of items in the response (as set in the query or by default).
            </summary>
        </member>
        <member name="P:FluentSpotifyApi.Model.Page`1.Next">
            <summary>
            URL to the next page of items. (<c>null</c> if none).
            </summary>
        </member>
        <member name="P:FluentSpotifyApi.Model.Page`1.Offset">
            <summary>
            The offset of the items returned (as set in the query or by default).
            </summary>
        </member>
        <member name="P:FluentSpotifyApi.Model.Page`1.Previous">
            <summary>
            URL to the previous page of items. (<c>null</c> if none).
            </summary>
        </member>
        <member name="P:FluentSpotifyApi.Model.Page`1.Total">
            <summary>
            The total number of items available to return.
            </summary>
        </member>
        <member name="T:FluentSpotifyApi.Model.Player.Actions">
            <summary>
            The actions.
            </summary>
        </member>
        <member name="P:FluentSpotifyApi.Model.Player.Actions.Disallows">
            <summary>
            The disallows.
            </summary>
        </member>
        <member name="T:FluentSpotifyApi.Model.Player.Context">
            <summary>
            The play context.
            </summary>
        </member>
        <member name="P:FluentSpotifyApi.Model.Player.Context.ExternalUrls">
            <summary>
            External URLs for this context.
            </summary>
        </member>
        <member name="P:FluentSpotifyApi.Model.Player.Context.Href">
            <summary>
            A link to the Web API endpoint providing full details of the track.
            </summary>
        </member>
        <member name="P:FluentSpotifyApi.Model.Player.Context.Type">
            <summary>
            The object type, e.g. “artist”, “playlist”, “album”, “show”.
            </summary>
        </member>
        <member name="P:FluentSpotifyApi.Model.Player.Context.Uri">
            <summary>
            The Spotify URI for the context.
            </summary>
        </member>
        <member name="T:FluentSpotifyApi.Model.Player.CurrentlyPlayingContext">
            <summary>
            The currently playing context.
            </summary>
            <seealso cref="T:FluentSpotifyApi.Model.Player.CurrentlyPlayingItem" />
        </member>
        <member name="P:FluentSpotifyApi.Model.Player.CurrentlyPlayingContext.Device">
            <summary>
            The device that is currently active.
            </summary>
        </member>
        <member name="P:FluentSpotifyApi.Model.Player.CurrentlyPlayingContext.RepeatState">
            <summary>
            <c>off</c>, <c>track</c>, <c>context</c>.
            </summary>
        </member>
        <member name="P:FluentSpotifyApi.Model.Player.CurrentlyPlayingContext.ShuffleState">
            <summary>
            If shuffle is on or off.
            </summary>
        </member>
        <member name="T:FluentSpotifyApi.Model.Player.CurrentlyPlayingItem">
            <summary>
            The currently playing item.
            </summary>
        </member>
        <member name="P:FluentSpotifyApi.Model.Player.CurrentlyPlayingItem.Actions">
            <summary>
            Allows to update the user interface based on which playback actions are available within the current context.
            </summary>
        </member>
        <member name="P:FluentSpotifyApi.Model.Player.CurrentlyPlayingItem.Context">
            <summary>
            A Context Object. Can be <c>null</c>.
            </summary>
        </member>
        <member name="P:FluentSpotifyApi.Model.Player.CurrentlyPlayingItem.CurrentlyPlayingType">
            <summary>
            The object type of the currently playing item. Can be one of <c>track</c>, <c>episode</c>, <c>ad</c> or <c>unknown</c>.
            </summary>
        </member>
        <member name="P:FluentSpotifyApi.Model.Player.CurrentlyPlayingItem.IsPlaying">
            <summary>
            If something is currently playing, return <c>true</c>.
            </summary>
        </member>
        <member name="P:FluentSpotifyApi.Model.Player.CurrentlyPlayingItem.Item">
            <summary>
            The currently playing <see cref="T:FluentSpotifyApi.Model.Tracks.Track"/> or <see cref="T:FluentSpotifyApi.Model.Episodes.Episode"/>. Can be <c>null</c>.
            </summary>
        </member>
        <member name="P:FluentSpotifyApi.Model.Player.CurrentlyPlayingItem.Progress">
            <summary>
            Progress into the currently playing track or episode. Can be <c>null</c>.
            </summary>
        </member>
        <member name="P:FluentSpotifyApi.Model.Player.CurrentlyPlayingItem.Timestamp">
            <summary>
            The date and time when data was fetched.
            </summary>
        </member>
        <member name="T:FluentSpotifyApi.Model.Player.Device">
            <summary>
            The device.
            </summary>
        </member>
        <member name="P:FluentSpotifyApi.Model.Player.Device.Id">
            <summary>
            The device ID. This may be <c>null</c>.
            </summary>
        </member>
        <member name="P:FluentSpotifyApi.Model.Player.Device.IsActive">
            <summary>
            If this device is the currently active device.
            </summary>
        </member>
        <member name="P:FluentSpotifyApi.Model.Player.Device.IsPrivateSession">
            <summary>
            If this device is currently in a private session.
            </summary>
        </member>
        <member name="P:FluentSpotifyApi.Model.Player.Device.IsRestricted">
            <summary>
            Whether controlling this device is restricted. At present if this is <c>true</c> then no Web API commands will be accepted by this device.
            </summary>
        </member>
        <member name="P:FluentSpotifyApi.Model.Player.Device.Name">
            <summary>
            The name of the device.
            </summary>
        </member>
        <member name="P:FluentSpotifyApi.Model.Player.Device.Type">
            <summary>
            Device type, such as “computer”, “smartphone” or “speaker”.
            </summary>
        </member>
        <member name="P:FluentSpotifyApi.Model.Player.Device.VolumePercent">
            <summary>
            The current volume in percent. This may be <c>null</c>.
            </summary>
        </member>
        <member name="T:FluentSpotifyApi.Model.Player.DevicesResponse">
            <summary>
            The devices response.
            </summary>
        </member>
        <member name="P:FluentSpotifyApi.Model.Player.DevicesResponse.Items">
            <summary>
            The devices.
            </summary>
        </member>
        <member name="T:FluentSpotifyApi.Model.Player.Disallows">
            <summary>
            The disallows.
            </summary>
        </member>
        <member name="P:FluentSpotifyApi.Model.Player.Disallows.InterruptingPlayback">
            <summary>
            Interrupting playback.
            </summary>
        </member>
        <member name="P:FluentSpotifyApi.Model.Player.Disallows.Pausing">
            <summary>
            Pausing.
            </summary>
        </member>
        <member name="P:FluentSpotifyApi.Model.Player.Disallows.Resuming">
            <summary>
            Resuming.
            </summary>
        </member>
        <member name="P:FluentSpotifyApi.Model.Player.Disallows.Seeking">
            <summary>
            Seeking playback location.
            </summary>
        </member>
        <member name="P:FluentSpotifyApi.Model.Player.Disallows.SkippingNext">
            <summary>
            Skipping to the next context.
            </summary>
        </member>
        <member name="P:FluentSpotifyApi.Model.Player.Disallows.SkippingPrev">
            <summary>
            Skipping to the previous context.
            </summary>
        </member>
        <member name="P:FluentSpotifyApi.Model.Player.Disallows.TogglingRepeatContext">
            <summary>
            Toggling repeat context flag.
            </summary>
        </member>
        <member name="P:FluentSpotifyApi.Model.Player.Disallows.TogglingRepeatTrack">
            <summary>
            Toggling repeat track flag.
            </summary>
        </member>
        <member name="P:FluentSpotifyApi.Model.Player.Disallows.TogglingShuffle">
            <summary>
            Toggling shuffle flag.
            </summary>
        </member>
        <member name="P:FluentSpotifyApi.Model.Player.Disallows.TransferringPlayback">
            <summary>
            Transferring playback between devices.
            </summary>
        </member>
        <member name="T:FluentSpotifyApi.Model.Player.PlayHistory">
            <summary>
            The play history.
            </summary>
        </member>
        <member name="P:FluentSpotifyApi.Model.Player.PlayHistory.Context">
            <summary>
            The context the track was played from.
            </summary>
        </member>
        <member name="P:FluentSpotifyApi.Model.Player.PlayHistory.PlayedAt">
            <summary>
            The UTC date and time the track was played.
            </summary>
        </member>
        <member name="P:FluentSpotifyApi.Model.Player.PlayHistory.Track">
            <summary>
            The track the user listened to.
            </summary>
        </member>
        <member name="T:FluentSpotifyApi.Model.Playlists.ChangePlaylistDetailsRequest">
            <summary>
            The request for changing playlist's details.
            </summary>
        </member>
        <member name="P:FluentSpotifyApi.Model.Playlists.ChangePlaylistDetailsRequest.Name">
            <summary>
            The optional new name for the playlist.
            </summary>
        </member>
        <member name="P:FluentSpotifyApi.Model.Playlists.ChangePlaylistDetailsRequest.Public">
            <summary>
            Optional. If <c>true</c> the playlist will be public, if <c>false</c> it will be private.
            </summary>
        </member>
        <member name="P:FluentSpotifyApi.Model.Playlists.ChangePlaylistDetailsRequest.Collaborative">
            <summary>
            Optional. If <c>true</c>, the playlist will become collaborative and other users will be able to modify the playlist in their Spotify client.
            Note: You can only set collaborative to <c>true</c> on non-public playlists.
            </summary>
        </member>
        <member name="P:FluentSpotifyApi.Model.Playlists.ChangePlaylistDetailsRequest.Description">
            <summary>
            Optional value for playlist description as displayed in Spotify Clients and in the Web API.
            </summary>
        </member>
        <member name="T:FluentSpotifyApi.Model.Playlists.CreatePlaylistRequest">
            <summary>
            The request for creating new playlists.
            </summary>
        </member>
        <member name="P:FluentSpotifyApi.Model.Playlists.CreatePlaylistRequest.Name">
            <summary>
            The required name for the new playlist. This name does not need to be unique; a user may have several playlists with the same name.
            </summary>
        </member>
        <member name="P:FluentSpotifyApi.Model.Playlists.CreatePlaylistRequest.Public">
            <summary>
            Defaults to <c>true</c>. If <c>true</c> the playlist will be public, if <c>false</c> it will be private.
            To be able to create private playlists, the user must have granted the <c>playlist-modify-private</c> scope.
            </summary>
        </member>
        <member name="P:FluentSpotifyApi.Model.Playlists.CreatePlaylistRequest.Collaborative">
            <summary>
            Defaults to <c>false</c>. If <c>true</c> the playlist will be collaborative. Note that to create a collaborative playlist you must also set <see cref="P:FluentSpotifyApi.Model.Playlists.CreatePlaylistRequest.Public"/> to <c>false</c>.
            To create collaborative playlists you must have granted <c>playlist-modify-private</c> and <c>playlist-modify-public scopes</c>.
            </summary>
        </member>
        <member name="P:FluentSpotifyApi.Model.Playlists.CreatePlaylistRequest.Description">
            <summary>
            Optional value for playlist description as displayed in Spotify Clients and in the Web API.
            </summary>
        </member>
        <member name="T:FluentSpotifyApi.Model.Playlists.Playlist">
            <summary>
            The playlist.
            </summary>
            <seealso cref="T:FluentSpotifyApi.Model.Playlists.PlaylistBase" />
        </member>
        <member name="P:FluentSpotifyApi.Model.Playlists.Playlist.Followers">
            <summary>
            Information about the followers of the playlist.
            </summary>
        </member>
        <member name="P:FluentSpotifyApi.Model.Playlists.Playlist.Tracks">
            <summary>
            Information about the tracks of the playlist. Note, a track object may be <c>null</c>. This can happen if a track is no longer available.
            </summary>
        </member>
        <member name="T:FluentSpotifyApi.Model.Playlists.PlaylistBase">
            <summary>
            The base class for playlists.
            </summary>
            <seealso cref="T:FluentSpotifyApi.Core.Model.EntityBase"/>
        </member>
        <member name="P:FluentSpotifyApi.Model.Playlists.PlaylistBase.Collaborative">
            <summary>
            <c>true</c> if the owner allows other users to modify the playlist.
            </summary>
        </member>
        <member name="P:FluentSpotifyApi.Model.Playlists.PlaylistBase.Description">
            <summary>
            The playlist description. Only returned for modified, verified playlists, otherwise <c>null</c>.
            </summary>
        </member>
        <member name="P:FluentSpotifyApi.Model.Playlists.PlaylistBase.Images">
            <summary>
            Images for the playlist. The array may be empty or contain up to three images. The images are returned by size in descending order.
            Note: If returned, the source URL for the image (<see cref="P:FluentSpotifyApi.Core.Model.Image.Url"/>) is temporary and will expire in less than a day.
            </summary>
        </member>
        <member name="P:FluentSpotifyApi.Model.Playlists.PlaylistBase.Name">
            <summary>
            The name of the playlist.
            </summary>
        </member>
        <member name="P:FluentSpotifyApi.Model.Playlists.PlaylistBase.Owner">
            <summary>
            The user who owns the playlist.
            </summary>
        </member>
        <member name="P:FluentSpotifyApi.Model.Playlists.PlaylistBase.Public">
            <summary>
            The playlist’s public/private status: <c>true</c> the playlist is public, <c>false</c> the playlist is private, <c>null</c> the playlist status is not relevant.
            </summary>
        </member>
        <member name="P:FluentSpotifyApi.Model.Playlists.PlaylistBase.SnapshotId">
            <summary>
            The version identifier for the current playlist. Can be supplied in other requests to target a specific playlist version.
            </summary>
        </member>
        <member name="T:FluentSpotifyApi.Model.Playlists.PlaylistSnapshot">
            <summary>
            The playlist snapshot.
            </summary>
        </member>
        <member name="P:FluentSpotifyApi.Model.Playlists.PlaylistSnapshot.SnapshotId">
            <summary>
            Identifies playlist version for future requests.
            </summary>
        </member>
        <member name="T:FluentSpotifyApi.Model.Playlists.PlaylistTrack">
            <summary>
            The playlist track.
            </summary>
        </member>
        <member name="P:FluentSpotifyApi.Model.Playlists.PlaylistTrack.AddedAt">
            <summary>
            The UTC date and time the track or episode was added. Note that some very old playlists may return <c>null</c> in this field.
            </summary>
        </member>
        <member name="P:FluentSpotifyApi.Model.Playlists.PlaylistTrack.AddedBy">
            <summary>
            The Spotify user who added the track or episode. Note that some very old playlists may return <c>null</c> in this field.
            </summary>
        </member>
        <member name="P:FluentSpotifyApi.Model.Playlists.PlaylistTrack.IsLocal">
            <summary>
            Whether this track or episode is a local file or not.
            </summary>
        </member>
        <member name="P:FluentSpotifyApi.Model.Playlists.PlaylistTrack.Track">
            <summary>
            Information about the <see cref="T:FluentSpotifyApi.Model.Tracks.Track"/> or <see cref="T:FluentSpotifyApi.Model.Episodes.Episode"/>.
            </summary>
        </member>
        <member name="T:FluentSpotifyApi.Model.Playlists.PlaylistTracksRef">
            <summary>
            The playlist tracks references.
            </summary>
        </member>
        <member name="P:FluentSpotifyApi.Model.Playlists.PlaylistTracksRef.Href">
            <summary>
            A link to the Web API endpoint where full details of the playlist’s tracks can be retrieved.
            </summary>
        </member>
        <member name="P:FluentSpotifyApi.Model.Playlists.PlaylistTracksRef.Total">
            <summary>
            Number of tracks in the playlist.
            </summary>
        </member>
        <member name="T:FluentSpotifyApi.Model.Playlists.SimplifiedPlaylist">
            <summary>
            The simplified playlist.
            </summary>
            <seealso cref="T:FluentSpotifyApi.Model.Playlists.PlaylistBase" />
        </member>
        <member name="P:FluentSpotifyApi.Model.Playlists.SimplifiedPlaylist.Tracks">
            <summary>
            A collection containing a link ( <see cref="P:FluentSpotifyApi.Model.Playlists.PlaylistTracksRef.Href"/> ) to the Web API endpoint where full details of the playlist’s tracks can be retrieved,
            along with the <see cref="P:FluentSpotifyApi.Model.Playlists.PlaylistTracksRef.Total"/> number of tracks in the playlist.
            Note, a track object may be <c>null</c>. This can happen if a track is no longer available.
            </summary>
        </member>
        <member name="T:FluentSpotifyApi.Model.Playlists.SimplifiedPlaylistsPageResponse">
            <summary>
            The simplified playlists page response.
            </summary>
        </member>
        <member name="P:FluentSpotifyApi.Model.Playlists.SimplifiedPlaylistsPageResponse.Page">
            <summary>
            The simplified playlists page.
            </summary>
        </member>
        <member name="T:FluentSpotifyApi.Model.Playlists.UriWithPositions">
            <summary>
            Spotify URI of playlist item with positions.
            </summary>
        </member>
        <member name="P:FluentSpotifyApi.Model.Playlists.UriWithPositions.Uri">
            <summary>
            The Spotify URI of playlist item (track or episode).
            </summary>
        </member>
        <member name="P:FluentSpotifyApi.Model.Playlists.UriWithPositions.Positions">
            <summary>
            Zero based index of playlist item.
            </summary>
        </member>
        <member name="T:FluentSpotifyApi.Model.Restriction">
            <summary>
            The restriction.
            </summary>
        </member>
        <member name="P:FluentSpotifyApi.Model.Restriction.Reason">
            <summary>
            The reason for the restriction.
            </summary>
        </member>
        <member name="T:FluentSpotifyApi.Model.Search.SearchResponse">
            <summary>
            The search response.
            </summary>
        </member>
        <member name="P:FluentSpotifyApi.Model.Search.SearchResponse.Albums">
            <summary>
            The albums.
            </summary>
        </member>
        <member name="P:FluentSpotifyApi.Model.Search.SearchResponse.Artists">
            <summary>
            The artists.
            </summary>
        </member>
        <member name="P:FluentSpotifyApi.Model.Search.SearchResponse.Tracks">
            <summary>
            The tracks.
            </summary>
        </member>
        <member name="P:FluentSpotifyApi.Model.Search.SearchResponse.Playlists">
            <summary>
            The playlists.
            </summary>
        </member>
        <member name="P:FluentSpotifyApi.Model.Search.SearchResponse.Shows">
            <summary>
            The shows.
            </summary>
        </member>
        <member name="P:FluentSpotifyApi.Model.Search.SearchResponse.Episodes">
            <summary>
            The episodes.
            </summary>
        </member>
        <member name="T:FluentSpotifyApi.Model.Shows.Show">
            <summary>
            The show.
            </summary>
            <seealso cref="T:FluentSpotifyApi.Model.Shows.ShowBase"/>
        </member>
        <member name="P:FluentSpotifyApi.Model.Shows.Show.Episodes">
            <summary>
            The show’s episodes.
            </summary>
        </member>
        <member name="T:FluentSpotifyApi.Model.Shows.ShowBase">
            <summary>
            The base class for shows.
            </summary>
            <seealso cref="T:FluentSpotifyApi.Core.Model.EntityBase" />
        </member>
        <member name="P:FluentSpotifyApi.Model.Shows.ShowBase.AvailableMarkets">
            <summary>
            A list of the countries in which the show can be played, identified by their ISO 3166-1 alpha-2 code.
            </summary>
        </member>
        <member name="P:FluentSpotifyApi.Model.Shows.ShowBase.Copyrights">
            <summary>
            The copyright statements of the show.
            </summary>
        </member>
        <member name="P:FluentSpotifyApi.Model.Shows.ShowBase.Description">
            <summary>
            A description of the show.
            </summary>
        </member>
        <member name="P:FluentSpotifyApi.Model.Shows.ShowBase.Explicit">
            <summary>
            Whether or not the show has explicit content (<c>true</c> = yes it does; <c>false</c> = no it does not OR unknown).
            </summary>
        </member>
        <member name="P:FluentSpotifyApi.Model.Shows.ShowBase.Images">
            <summary>
            The cover art for the show in various sizes, widest first.
            </summary>
        </member>
        <member name="P:FluentSpotifyApi.Model.Shows.ShowBase.IsExternallyHosted">
            <summary>
            True if all of the show’s episodes are hosted outside of Spotify’s CDN. This field might be <c>null</c> in some cases.
            </summary>
        </member>
        <member name="P:FluentSpotifyApi.Model.Shows.ShowBase.Languages">
            <summary>
            A list of the languages used in the show, identified by their ISO 639 code.
            </summary>
        </member>
        <member name="P:FluentSpotifyApi.Model.Shows.ShowBase.MediaType">
            <summary>
            The media type of the show.
            </summary>
        </member>
        <member name="P:FluentSpotifyApi.Model.Shows.ShowBase.Name">
            <summary>
            The name of the episode.
            </summary>
        </member>
        <member name="P:FluentSpotifyApi.Model.Shows.ShowBase.Publisher">
            <summary>
            The publisher of the show.
            </summary>
        </member>
        <member name="T:FluentSpotifyApi.Model.Shows.SimplifiedShow">
            <summary>
            The simplified show.
            </summary>
            <seealso cref="T:FluentSpotifyApi.Model.Shows.ShowBase"/>
        </member>
        <member name="T:FluentSpotifyApi.Model.Shows.SimplifiedShowsPageResponse">
            <summary>
            The simplified shows page response.
            </summary>
        </member>
        <member name="P:FluentSpotifyApi.Model.Shows.SimplifiedShowsPageResponse.Page">
            <summary>
            The simplified shows page.
            </summary>
        </member>
        <member name="T:FluentSpotifyApi.Model.Shows.SimplifiedShowsResponse">
            <summary>
            The simplified shows response.
            </summary>
        </member>
        <member name="P:FluentSpotifyApi.Model.Shows.SimplifiedShowsResponse.Items">
            <summary>
            The simplified shows.
            </summary>
        </member>
        <member name="T:FluentSpotifyApi.Model.Tracks.LinkedTrack">
            <summary>
            The linked track.
            </summary>
        </member>
        <member name="P:FluentSpotifyApi.Model.Tracks.LinkedTrack.Type">
            <summary>
            The object type: “track”.
            </summary>
        </member>
        <member name="P:FluentSpotifyApi.Model.Tracks.LinkedTrack.Id">
            <summary>
            The Spotify ID for the track.
            </summary>
        </member>
        <member name="P:FluentSpotifyApi.Model.Tracks.LinkedTrack.Uri">
            <summary>
            The Spotify URI for the track.
            </summary>
        </member>
        <member name="P:FluentSpotifyApi.Model.Tracks.LinkedTrack.Href">
            <summary>
            A link to the Web API endpoint providing full details of the track.
            </summary>
        </member>
        <member name="P:FluentSpotifyApi.Model.Tracks.LinkedTrack.ExternalUrls">
            <summary>
            Known external URLs for this track.
            </summary>
        </member>
        <member name="T:FluentSpotifyApi.Model.Tracks.SimplifiedTrack">
            <summary>
            The simplified track.
            </summary>
            <seealso cref="T:FluentSpotifyApi.Model.Tracks.TrackBase" />
        </member>
        <member name="T:FluentSpotifyApi.Model.Tracks.Track">
            <summary>
            The track.
            </summary>
            <seealso cref="T:FluentSpotifyApi.Model.Tracks.TrackBase" />
        </member>
        <member name="P:FluentSpotifyApi.Model.Tracks.Track.Album">
            <summary>
            The album on which the track appears. The album object includes a link in href to full information about the album.
            </summary>
        </member>
        <member name="P:FluentSpotifyApi.Model.Tracks.Track.ExternalIds">
            <summary>
            Known external IDs for the track.
            </summary>
        </member>
        <member name="P:FluentSpotifyApi.Model.Tracks.Track.Popularity">
            <summary>
            The popularity of a track is a value between 0 and 100, with 100 being the most popular.
            The popularity is calculated by algorithm and is based, in the most part, on the total number of plays the track has had and how recent those plays are.
            Generally speaking, songs that are being played a lot now will have a higher popularity than songs that were played a lot in the past.
            Duplicate tracks (e.g.the same track from a single and an album) are rated independently. Artist and album popularity is derived mathematically from track popularity.
            Note that the popularity value may lag actual popularity by a few days: the value is not updated in real time.
            </summary>
        </member>
        <member name="T:FluentSpotifyApi.Model.Tracks.TrackBase">
            <summary>
            The base class for tracks.
            </summary>
            <seealso cref="T:FluentSpotifyApi.Core.Model.EntityBase" />
        </member>
        <member name="P:FluentSpotifyApi.Model.Tracks.TrackBase.Artists">
            <summary>
            The artists who performed the track. Each artist object includes a link in <see cref="P:FluentSpotifyApi.Core.Model.EntityBase.Href"/> to more detailed information about the artist.
            </summary>
        </member>
        <member name="P:FluentSpotifyApi.Model.Tracks.TrackBase.AvailableMarkets">
            <summary>
            A list of the countries in which the track can be played, identified by their ISO 3166-1 alpha-2 code.
            </summary>
        </member>
        <member name="P:FluentSpotifyApi.Model.Tracks.TrackBase.DiscNumber">
            <summary>
            The disc number (usually <c>1</c> unless the album consists of more than one disc).
            </summary>
        </member>
        <member name="P:FluentSpotifyApi.Model.Tracks.TrackBase.Duration">
            <summary>
            The track length.
            </summary>
        </member>
        <member name="P:FluentSpotifyApi.Model.Tracks.TrackBase.IsExplicit">
            <summary>
            Whether or not the track has explicit lyrics (<c>true</c> = yes it does; <c>false</c> = no it does not OR unknown).
            </summary>
        </member>
        <member name="P:FluentSpotifyApi.Model.Tracks.TrackBase.IsPlayable">
            <summary>
            Part of the response when Track Relinking is applied.
            If <c>true</c>, the track is playable in the given market. Otherwise <c>false</c>.
            </summary>
        </member>
        <member name="P:FluentSpotifyApi.Model.Tracks.TrackBase.LinkedFrom">
            <summary>
            Part of the response when Track Relinking is applied, and the requested track has been replaced with different track.
            The track in the <see cref="T:FluentSpotifyApi.Model.Tracks.LinkedTrack"/> object contains information about the originally requested track.
            </summary>
        </member>
        <member name="P:FluentSpotifyApi.Model.Tracks.TrackBase.Restrictions">
            <summary>
            Included in the response when a content restriction is applied.
            </summary>
        </member>
        <member name="P:FluentSpotifyApi.Model.Tracks.TrackBase.Name">
            <summary>
            The name of the track.
            </summary>
        </member>
        <member name="P:FluentSpotifyApi.Model.Tracks.TrackBase.PreviewUrl">
            <summary>
            A link to a 30 second preview (MP3 format) of the track. Can be <c>null</c>.
            </summary>
        </member>
        <member name="P:FluentSpotifyApi.Model.Tracks.TrackBase.TrackNumber">
            <summary>
            The number of the track. If an album has several discs, the track number is the number on the specified disc.
            </summary>
        </member>
        <member name="P:FluentSpotifyApi.Model.Tracks.TrackBase.IsLocal">
            <summary>
            Whether or not the track is from a local file.
            </summary>
        </member>
        <member name="T:FluentSpotifyApi.Model.Tracks.TracksPageResponse">
            <summary>
            The tracks page response.
            </summary>
        </member>
        <member name="P:FluentSpotifyApi.Model.Tracks.TracksPageResponse.Page">
            <summary>
            The tracks page.
            </summary>
        </member>
        <member name="T:FluentSpotifyApi.Model.Tracks.TracksResponse">
            <summary>
            The tracks response.
            </summary>
        </member>
        <member name="P:FluentSpotifyApi.Model.Tracks.TracksResponse.Items">
            <summary>
            The tracks.
            </summary>
        </member>
        <member name="T:FluentSpotifyApi.Model.UnknownEntity">
            <summary>
            An unrecognized Spotify entity.
            </summary>
        </member>
    </members>
</doc>
